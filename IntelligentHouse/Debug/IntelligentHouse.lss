
IntelligentHouse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800200  0000188a  0000191e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000188a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800292  00800292  000019b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023dc  00000000  00000000  00001be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000148e  00000000  00000000  00003fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001080  00000000  00000000  0000544e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  000064d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000956  00000000  00000000  00006858  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b8d  00000000  00000000  000071ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00007d3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	1b c1       	rjmp	.+566    	; 0x238 <__ctors_end>
       2:	00 00       	nop
       4:	39 c1       	rjmp	.+626    	; 0x278 <__bad_interrupt>
       6:	00 00       	nop
       8:	37 c1       	rjmp	.+622    	; 0x278 <__bad_interrupt>
       a:	00 00       	nop
       c:	35 c1       	rjmp	.+618    	; 0x278 <__bad_interrupt>
       e:	00 00       	nop
      10:	33 c1       	rjmp	.+614    	; 0x278 <__bad_interrupt>
      12:	00 00       	nop
      14:	31 c1       	rjmp	.+610    	; 0x278 <__bad_interrupt>
      16:	00 00       	nop
      18:	2f c1       	rjmp	.+606    	; 0x278 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	2d c1       	rjmp	.+602    	; 0x278 <__bad_interrupt>
      1e:	00 00       	nop
      20:	2b c1       	rjmp	.+598    	; 0x278 <__bad_interrupt>
      22:	00 00       	nop
      24:	29 c1       	rjmp	.+594    	; 0x278 <__bad_interrupt>
      26:	00 00       	nop
      28:	27 c1       	rjmp	.+590    	; 0x278 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	25 c1       	rjmp	.+586    	; 0x278 <__bad_interrupt>
      2e:	00 00       	nop
      30:	23 c1       	rjmp	.+582    	; 0x278 <__bad_interrupt>
      32:	00 00       	nop
      34:	21 c1       	rjmp	.+578    	; 0x278 <__bad_interrupt>
      36:	00 00       	nop
      38:	1f c1       	rjmp	.+574    	; 0x278 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	1d c1       	rjmp	.+570    	; 0x278 <__bad_interrupt>
      3e:	00 00       	nop
      40:	1b c1       	rjmp	.+566    	; 0x278 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c6       	rjmp	.+3296   	; 0xd26 <__vector_17>
      46:	00 00       	nop
      48:	17 c1       	rjmp	.+558    	; 0x278 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	15 c1       	rjmp	.+554    	; 0x278 <__bad_interrupt>
      4e:	00 00       	nop
      50:	13 c1       	rjmp	.+550    	; 0x278 <__bad_interrupt>
      52:	00 00       	nop
      54:	11 c1       	rjmp	.+546    	; 0x278 <__bad_interrupt>
      56:	00 00       	nop
      58:	0f c1       	rjmp	.+542    	; 0x278 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0d c1       	rjmp	.+538    	; 0x278 <__bad_interrupt>
      5e:	00 00       	nop
      60:	0b c1       	rjmp	.+534    	; 0x278 <__bad_interrupt>
      62:	00 00       	nop
      64:	09 c1       	rjmp	.+530    	; 0x278 <__bad_interrupt>
      66:	00 00       	nop
      68:	07 c1       	rjmp	.+526    	; 0x278 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	05 c1       	rjmp	.+522    	; 0x278 <__bad_interrupt>
      6e:	00 00       	nop
      70:	03 c1       	rjmp	.+518    	; 0x278 <__bad_interrupt>
      72:	00 00       	nop
      74:	c8 c1       	rjmp	.+912    	; 0x406 <__vector_29>
      76:	00 00       	nop
      78:	ff c0       	rjmp	.+510    	; 0x278 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	fd c0       	rjmp	.+506    	; 0x278 <__bad_interrupt>
      7e:	00 00       	nop
      80:	fb c0       	rjmp	.+502    	; 0x278 <__bad_interrupt>
      82:	00 00       	nop
      84:	f9 c0       	rjmp	.+498    	; 0x278 <__bad_interrupt>
      86:	00 00       	nop
      88:	f7 c0       	rjmp	.+494    	; 0x278 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f5 c0       	rjmp	.+490    	; 0x278 <__bad_interrupt>
      8e:	00 00       	nop
      90:	f3 c0       	rjmp	.+486    	; 0x278 <__bad_interrupt>
      92:	00 00       	nop
      94:	f1 c0       	rjmp	.+482    	; 0x278 <__bad_interrupt>
      96:	00 00       	nop
      98:	ef c0       	rjmp	.+478    	; 0x278 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ed c0       	rjmp	.+474    	; 0x278 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	eb c0       	rjmp	.+470    	; 0x278 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	e9 c0       	rjmp	.+466    	; 0x278 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	e7 c0       	rjmp	.+462    	; 0x278 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	e5 c0       	rjmp	.+458    	; 0x278 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	e3 c0       	rjmp	.+454    	; 0x278 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	e1 c0       	rjmp	.+450    	; 0x278 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	df c0       	rjmp	.+446    	; 0x278 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	dd c0       	rjmp	.+442    	; 0x278 <__bad_interrupt>
      be:	00 00       	nop
      c0:	db c0       	rjmp	.+438    	; 0x278 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	d9 c0       	rjmp	.+434    	; 0x278 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	d7 c0       	rjmp	.+430    	; 0x278 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	d5 c0       	rjmp	.+426    	; 0x278 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	d3 c0       	rjmp	.+422    	; 0x278 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	d1 c0       	rjmp	.+418    	; 0x278 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	cf c0       	rjmp	.+414    	; 0x278 <__bad_interrupt>
      da:	00 00       	nop
      dc:	cd c0       	rjmp	.+410    	; 0x278 <__bad_interrupt>
      de:	00 00       	nop
      e0:	cb c0       	rjmp	.+406    	; 0x278 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 00       	.word	0x0008	; ????
      e6:	00 00       	nop
      e8:	be 92       	st	-X, r11
      ea:	24 49       	sbci	r18, 0x94	; 148
      ec:	12 3e       	cpi	r17, 0xE2	; 226
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	be cd       	rjmp	.-1156   	; 0xfffffc70 <__eeprom_end+0xff7efc70>
      f4:	cc cc       	rjmp	.-1640   	; 0xfffffa8e <__eeprom_end+0xff7efa8e>
      f6:	4c 3e       	cpi	r20, 0xEC	; 236
      f8:	00 00       	nop
      fa:	00 80       	ld	r0, Z
      fc:	be ab       	std	Y+54, r27	; 0x36
      fe:	aa aa       	std	Y+50, r10	; 0x32
     100:	aa 3e       	cpi	r26, 0xEA	; 234
     102:	00 00       	nop
     104:	00 00       	nop
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	00 08       	sbc	r0, r0
     112:	41 78       	andi	r20, 0x81	; 129
     114:	d3 bb       	out	0x13, r29	; 19
     116:	43 87       	std	Z+11, r20	; 0x0b
     118:	d1 13       	cpse	r29, r17
     11a:	3d 19       	sub	r19, r13
     11c:	0e 3c       	cpi	r16, 0xCE	; 206
     11e:	c3 bd       	out	0x23, r28	; 35
     120:	42 82       	std	Z+2, r4	; 0x02
     122:	ad 2b       	or	r26, r29
     124:	3e 68       	ori	r19, 0x8E	; 142
     126:	ec 82       	std	Y+4, r14	; 0x04
     128:	76 be       	out	0x36, r7	; 54
     12a:	d9 8f       	std	Y+25, r29	; 0x19
     12c:	e1 a9       	ldd	r30, Z+49	; 0x31
     12e:	3e 4c       	sbci	r19, 0xCE	; 206
     130:	80 ef       	ldi	r24, 0xF0	; 240
     132:	ff be       	out	0x3f, r15	; 63
     134:	01 c4       	rjmp	.+2050   	; 0x938 <log>
     136:	ff 7f       	andi	r31, 0xFF	; 255
     138:	3f 00       	.word	0x003f	; ????
     13a:	00 00       	nop
	...

0000013e <__trampolines_end>:
     13e:	00 40       	sbci	r16, 0x00	; 0
     140:	7a 10       	cpse	r7, r10
     142:	f3 5a       	subi	r31, 0xA3	; 163
     144:	00 a0       	ldd	r0, Z+32	; 0x20
     146:	72 4e       	sbci	r23, 0xE2	; 226
     148:	18 09       	sbc	r17, r8
     14a:	00 10       	cpse	r0, r0
     14c:	a5 d4       	rcall	.+2378   	; 0xa98 <__fp_mpack_finite+0x16>
     14e:	e8 00       	.word	0x00e8	; ????
     150:	00 e8       	ldi	r16, 0x80	; 128
     152:	76 48       	sbci	r23, 0x86	; 134
     154:	17 00       	.word	0x0017	; ????
     156:	00 e4       	ldi	r16, 0x40	; 64
     158:	0b 54       	subi	r16, 0x4B	; 75
     15a:	02 00       	.word	0x0002	; ????
     15c:	00 ca       	rjmp	.-3072   	; 0xfffff55e <__eeprom_end+0xff7ef55e>
     15e:	9a 3b       	cpi	r25, 0xBA	; 186
     160:	00 00       	nop
     162:	00 e1       	ldi	r16, 0x10	; 16
     164:	f5 05       	cpc	r31, r5
     166:	00 00       	nop
     168:	80 96       	adiw	r24, 0x20	; 32
     16a:	98 00       	.word	0x0098	; ????
     16c:	00 00       	nop
     16e:	40 42       	sbci	r20, 0x20	; 32
     170:	0f 00       	.word	0x000f	; ????
     172:	00 00       	nop
     174:	a0 86       	std	Z+8, r10	; 0x08
     176:	01 00       	.word	0x0001	; ????
     178:	00 00       	nop
     17a:	10 27       	eor	r17, r16
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	e8 03       	fmulsu	r22, r16
     182:	00 00       	nop
     184:	00 00       	nop
     186:	64 00       	.word	0x0064	; ????
     188:	00 00       	nop
     18a:	00 00       	nop
     18c:	0a 00       	.word	0x000a	; ????
     18e:	00 00       	nop
     190:	00 00       	nop
     192:	01 00       	.word	0x0001	; ????
     194:	00 00       	nop
     196:	00 00       	nop
     198:	2c 76       	andi	r18, 0x6C	; 108
     19a:	d8 88       	ldd	r13, Y+16	; 0x10
     19c:	dc 67       	ori	r29, 0x7C	; 124
     19e:	4f 08       	sbc	r4, r15
     1a0:	23 df       	rcall	.-442    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1a2:	c1 df       	rcall	.-126    	; 0x126 <__SREG__+0xe7>
     1a4:	ae 59       	subi	r26, 0x9E	; 158
     1a6:	e1 b1       	in	r30, 0x01	; 1
     1a8:	b7 96       	adiw	r30, 0x27	; 39
     1aa:	e5 e3       	ldi	r30, 0x35	; 53
     1ac:	e4 53       	subi	r30, 0x34	; 52
     1ae:	c6 3a       	cpi	r28, 0xA6	; 166
     1b0:	e6 51       	subi	r30, 0x16	; 22
     1b2:	99 76       	andi	r25, 0x69	; 105
     1b4:	96 e8       	ldi	r25, 0x86	; 134
     1b6:	e6 c2       	rjmp	.+1484   	; 0x784 <__divsf3_pse+0x24>
     1b8:	84 26       	eor	r8, r20
     1ba:	eb 89       	ldd	r30, Y+19	; 0x13
     1bc:	8c 9b       	sbis	0x11, 4	; 17
     1be:	62 ed       	ldi	r22, 0xD2	; 210
     1c0:	40 7c       	andi	r20, 0xC0	; 192
     1c2:	6f fc       	.word	0xfc6f	; ????
     1c4:	ef bc       	out	0x2f, r14	; 47
     1c6:	9c 9f       	mul	r25, r28
     1c8:	40 f2       	brcs	.-112    	; 0x15a <__trampolines_end+0x1c>
     1ca:	ba a5       	ldd	r27, Y+42	; 0x2a
     1cc:	6f a5       	ldd	r22, Y+47	; 0x2f
     1ce:	f4 90       	lpm	r15, Z
     1d0:	05 5a       	subi	r16, 0xA5	; 165
     1d2:	2a f7       	brpl	.-54     	; 0x19e <__trampolines_end+0x60>
     1d4:	5c 93       	st	X, r21
     1d6:	6b 6c       	ori	r22, 0xCB	; 203
     1d8:	f9 67       	ori	r31, 0x79	; 121
     1da:	6d c1       	rjmp	.+730    	; 0x4b6 <__vector_29+0xb0>
     1dc:	1b fc       	.word	0xfc1b	; ????
     1de:	e0 e4       	ldi	r30, 0x40	; 64
     1e0:	0d 47       	sbci	r16, 0x7D	; 125
     1e2:	fe f5       	brtc	.+126    	; 0x262 <__do_clear_bss>
     1e4:	20 e6       	ldi	r18, 0x60	; 96
     1e6:	b5 00       	.word	0x00b5	; ????
     1e8:	d0 ed       	ldi	r29, 0xD0	; 208
     1ea:	90 2e       	mov	r9, r16
     1ec:	03 00       	.word	0x0003	; ????
     1ee:	94 35       	cpi	r25, 0x54	; 84
     1f0:	77 05       	cpc	r23, r7
     1f2:	00 80       	ld	r0, Z
     1f4:	84 1e       	adc	r8, r20
     1f6:	08 00       	.word	0x0008	; ????
     1f8:	00 20       	and	r0, r0
     1fa:	4e 0a       	sbc	r4, r30
     1fc:	00 00       	nop
     1fe:	00 c8       	rjmp	.-4096   	; 0xfffff200 <__eeprom_end+0xff7ef200>
     200:	0c 33       	cpi	r16, 0x3C	; 60
     202:	33 33       	cpi	r19, 0x33	; 51
     204:	33 0f       	add	r19, r19
     206:	98 6e       	ori	r25, 0xE8	; 232
     208:	12 83       	std	Z+2, r17	; 0x02
     20a:	11 41       	sbci	r17, 0x11	; 17
     20c:	ef 8d       	ldd	r30, Y+31	; 0x1f
     20e:	21 14       	cp	r2, r1
     210:	89 3b       	cpi	r24, 0xB9	; 185
     212:	e6 55       	subi	r30, 0x56	; 86
     214:	16 cf       	rjmp	.-468    	; 0x42 <__SREG__+0x3>
     216:	fe e6       	ldi	r31, 0x6E	; 110
     218:	db 18       	sub	r13, r11
     21a:	d1 84       	ldd	r13, Z+9	; 0x09
     21c:	4b 38       	cpi	r20, 0x8B	; 139
     21e:	1b f7       	brvc	.-58     	; 0x1e6 <__trampolines_end+0xa8>
     220:	7c 1d       	adc	r23, r12
     222:	90 1d       	adc	r25, r0
     224:	a4 bb       	out	0x14, r26	; 20
     226:	e4 24       	eor	r14, r4
     228:	20 32       	cpi	r18, 0x20	; 32
     22a:	84 72       	andi	r24, 0x24	; 36
     22c:	5e 22       	and	r5, r30
     22e:	81 00       	.word	0x0081	; ????
     230:	c9 f1       	breq	.+114    	; 0x2a4 <lcd_write+0x22>
     232:	24 ec       	ldi	r18, 0xC4	; 196
     234:	a1 e5       	ldi	r26, 0x51	; 81
     236:	3d 27       	eor	r19, r29

00000238 <__ctors_end>:
     238:	11 24       	eor	r1, r1
     23a:	1f be       	out	0x3f, r1	; 63
     23c:	cf ef       	ldi	r28, 0xFF	; 255
     23e:	d1 e2       	ldi	r29, 0x21	; 33
     240:	de bf       	out	0x3e, r29	; 62
     242:	cd bf       	out	0x3d, r28	; 61
     244:	00 e0       	ldi	r16, 0x00	; 0
     246:	0c bf       	out	0x3c, r16	; 60

00000248 <__do_copy_data>:
     248:	12 e0       	ldi	r17, 0x02	; 2
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b2 e0       	ldi	r27, 0x02	; 2
     24e:	ea e8       	ldi	r30, 0x8A	; 138
     250:	f8 e1       	ldi	r31, 0x18	; 24
     252:	00 e0       	ldi	r16, 0x00	; 0
     254:	0b bf       	out	0x3b, r16	; 59
     256:	02 c0       	rjmp	.+4      	; 0x25c <__do_copy_data+0x14>
     258:	07 90       	elpm	r0, Z+
     25a:	0d 92       	st	X+, r0
     25c:	a2 39       	cpi	r26, 0x92	; 146
     25e:	b1 07       	cpc	r27, r17
     260:	d9 f7       	brne	.-10     	; 0x258 <__do_copy_data+0x10>

00000262 <__do_clear_bss>:
     262:	22 e0       	ldi	r18, 0x02	; 2
     264:	a2 e9       	ldi	r26, 0x92	; 146
     266:	b2 e0       	ldi	r27, 0x02	; 2
     268:	01 c0       	rjmp	.+2      	; 0x26c <.do_clear_bss_start>

0000026a <.do_clear_bss_loop>:
     26a:	1d 92       	st	X+, r1

0000026c <.do_clear_bss_start>:
     26c:	a8 39       	cpi	r26, 0x98	; 152
     26e:	b2 07       	cpc	r27, r18
     270:	e1 f7       	brne	.-8      	; 0x26a <.do_clear_bss_loop>
     272:	5b d1       	rcall	.+694    	; 0x52a <main>
     274:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <_exit>

00000278 <__bad_interrupt>:
     278:	c3 ce       	rjmp	.-634    	; 0x0 <__vectors>

0000027a <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     27a:	13 9a       	sbi	0x02, 3	; 2
     27c:	00 00       	nop
     27e:	13 98       	cbi	0x02, 3	; 2
     280:	08 95       	ret

00000282 <lcd_write>:
     282:	cf 93       	push	r28
     284:	c8 2f       	mov	r28, r24
     286:	66 23       	and	r22, r22
     288:	11 f0       	breq	.+4      	; 0x28e <lcd_write+0xc>
     28a:	16 9a       	sbi	0x02, 6	; 2
     28c:	01 c0       	rjmp	.+2      	; 0x290 <lcd_write+0xe>
     28e:	16 98       	cbi	0x02, 6	; 2
     290:	15 98       	cbi	0x02, 5	; 2
     292:	08 9a       	sbi	0x01, 0	; 1
     294:	09 9a       	sbi	0x01, 1	; 1
     296:	0a 9a       	sbi	0x01, 2	; 1
     298:	0c 9a       	sbi	0x01, 4	; 1
     29a:	14 98       	cbi	0x02, 4	; 2
     29c:	12 98       	cbi	0x02, 2	; 2
     29e:	11 98       	cbi	0x02, 1	; 2
     2a0:	10 98       	cbi	0x02, 0	; 2
     2a2:	cc 23       	and	r28, r28
     2a4:	0c f4       	brge	.+2      	; 0x2a8 <lcd_write+0x26>
     2a6:	14 9a       	sbi	0x02, 4	; 2
     2a8:	c6 fd       	sbrc	r28, 6
     2aa:	12 9a       	sbi	0x02, 2	; 2
     2ac:	c5 fd       	sbrc	r28, 5
     2ae:	11 9a       	sbi	0x02, 1	; 2
     2b0:	c4 fd       	sbrc	r28, 4
     2b2:	10 9a       	sbi	0x02, 0	; 2
     2b4:	e2 df       	rcall	.-60     	; 0x27a <toggle_e>
     2b6:	14 98       	cbi	0x02, 4	; 2
     2b8:	12 98       	cbi	0x02, 2	; 2
     2ba:	11 98       	cbi	0x02, 1	; 2
     2bc:	10 98       	cbi	0x02, 0	; 2
     2be:	c3 fd       	sbrc	r28, 3
     2c0:	14 9a       	sbi	0x02, 4	; 2
     2c2:	c2 fd       	sbrc	r28, 2
     2c4:	12 9a       	sbi	0x02, 2	; 2
     2c6:	c1 fd       	sbrc	r28, 1
     2c8:	11 9a       	sbi	0x02, 1	; 2
     2ca:	c0 fd       	sbrc	r28, 0
     2cc:	10 9a       	sbi	0x02, 0	; 2
     2ce:	d5 df       	rcall	.-86     	; 0x27a <toggle_e>
     2d0:	10 9a       	sbi	0x02, 0	; 2
     2d2:	11 9a       	sbi	0x02, 1	; 2
     2d4:	12 9a       	sbi	0x02, 2	; 2
     2d6:	14 9a       	sbi	0x02, 4	; 2
     2d8:	cf 91       	pop	r28
     2da:	08 95       	ret

000002dc <lcd_read>:
     2dc:	88 23       	and	r24, r24
     2de:	11 f0       	breq	.+4      	; 0x2e4 <lcd_read+0x8>
     2e0:	16 9a       	sbi	0x02, 6	; 2
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <lcd_read+0xa>
     2e4:	16 98       	cbi	0x02, 6	; 2
     2e6:	15 9a       	sbi	0x02, 5	; 2
     2e8:	08 98       	cbi	0x01, 0	; 1
     2ea:	09 98       	cbi	0x01, 1	; 1
     2ec:	0a 98       	cbi	0x01, 2	; 1
     2ee:	0c 98       	cbi	0x01, 4	; 1
     2f0:	13 9a       	sbi	0x02, 3	; 2
     2f2:	00 00       	nop
     2f4:	00 9b       	sbis	0x00, 0	; 0
     2f6:	02 c0       	rjmp	.+4      	; 0x2fc <lcd_read+0x20>
     2f8:	80 e1       	ldi	r24, 0x10	; 16
     2fa:	01 c0       	rjmp	.+2      	; 0x2fe <lcd_read+0x22>
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	01 99       	sbic	0x00, 1	; 0
     300:	80 62       	ori	r24, 0x20	; 32
     302:	02 99       	sbic	0x00, 2	; 0
     304:	80 64       	ori	r24, 0x40	; 64
     306:	04 99       	sbic	0x00, 4	; 0
     308:	80 68       	ori	r24, 0x80	; 128
     30a:	13 98       	cbi	0x02, 3	; 2
     30c:	00 00       	nop
     30e:	13 9a       	sbi	0x02, 3	; 2
     310:	00 00       	nop
     312:	00 99       	sbic	0x00, 0	; 0
     314:	81 60       	ori	r24, 0x01	; 1
     316:	01 99       	sbic	0x00, 1	; 0
     318:	82 60       	ori	r24, 0x02	; 2
     31a:	02 99       	sbic	0x00, 2	; 0
     31c:	84 60       	ori	r24, 0x04	; 4
     31e:	04 99       	sbic	0x00, 4	; 0
     320:	88 60       	ori	r24, 0x08	; 8
     322:	13 98       	cbi	0x02, 3	; 2
     324:	08 95       	ret

00000326 <lcd_waitbusy>:
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	d9 df       	rcall	.-78     	; 0x2dc <lcd_read>
     32a:	88 23       	and	r24, r24
     32c:	e4 f3       	brlt	.-8      	; 0x326 <lcd_waitbusy>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <lcd_waitbusy+0xa>
     330:	00 c0       	rjmp	.+0      	; 0x332 <lcd_waitbusy+0xc>
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	d3 cf       	rjmp	.-90     	; 0x2dc <lcd_read>
     336:	08 95       	ret

00000338 <lcd_command>:
     338:	cf 93       	push	r28
     33a:	c8 2f       	mov	r28, r24
     33c:	f4 df       	rcall	.-24     	; 0x326 <lcd_waitbusy>
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	8c 2f       	mov	r24, r28
     342:	9f df       	rcall	.-194    	; 0x282 <lcd_write>
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <lcd_gotoxy>:
     348:	61 11       	cpse	r22, r1
     34a:	03 c0       	rjmp	.+6      	; 0x352 <lcd_gotoxy+0xa>
     34c:	80 58       	subi	r24, 0x80	; 128
     34e:	f4 cf       	rjmp	.-24     	; 0x338 <lcd_command>
     350:	08 95       	ret
     352:	80 54       	subi	r24, 0x40	; 64
     354:	f1 cf       	rjmp	.-30     	; 0x338 <lcd_command>
     356:	08 95       	ret

00000358 <lcd_clrscr>:
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	ee cf       	rjmp	.-36     	; 0x338 <lcd_command>
     35c:	08 95       	ret

0000035e <lcd_putc>:
     35e:	cf 93       	push	r28
     360:	c8 2f       	mov	r28, r24
     362:	e1 df       	rcall	.-62     	; 0x326 <lcd_waitbusy>
     364:	ca 30       	cpi	r28, 0x0A	; 10
     366:	41 f4       	brne	.+16     	; 0x378 <lcd_putc+0x1a>
     368:	80 34       	cpi	r24, 0x40	; 64
     36a:	10 f0       	brcs	.+4      	; 0x370 <lcd_putc+0x12>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	01 c0       	rjmp	.+2      	; 0x372 <lcd_putc+0x14>
     370:	80 e4       	ldi	r24, 0x40	; 64
     372:	80 58       	subi	r24, 0x80	; 128
     374:	e1 df       	rcall	.-62     	; 0x338 <lcd_command>
     376:	03 c0       	rjmp	.+6      	; 0x37e <lcd_putc+0x20>
     378:	61 e0       	ldi	r22, 0x01	; 1
     37a:	8c 2f       	mov	r24, r28
     37c:	82 df       	rcall	.-252    	; 0x282 <lcd_write>
     37e:	cf 91       	pop	r28
     380:	08 95       	ret

00000382 <lcd_puts>:
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	ec 01       	movw	r28, r24
     388:	21 96       	adiw	r28, 0x01	; 1
     38a:	fc 01       	movw	r30, r24
     38c:	80 81       	ld	r24, Z
     38e:	88 23       	and	r24, r24
     390:	21 f0       	breq	.+8      	; 0x39a <lcd_puts+0x18>
     392:	e5 df       	rcall	.-54     	; 0x35e <lcd_putc>
     394:	89 91       	ld	r24, Y+
     396:	81 11       	cpse	r24, r1
     398:	fc cf       	rjmp	.-8      	; 0x392 <lcd_puts+0x10>
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     3a0:	cf 93       	push	r28
     3a2:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     3a4:	0e 9a       	sbi	0x01, 6	; 1
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     3a6:	0d 9a       	sbi	0x01, 5	; 1
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     3a8:	0b 9a       	sbi	0x01, 3	; 1
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     3aa:	08 9a       	sbi	0x01, 0	; 1
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     3ac:	09 9a       	sbi	0x01, 1	; 1
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     3ae:	0a 9a       	sbi	0x01, 2	; 1
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     3b0:	0c 9a       	sbi	0x01, 4	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b2:	8f e9       	ldi	r24, 0x9F	; 159
     3b4:	9f e0       	ldi	r25, 0x0F	; 15
     3b6:	01 97       	sbiw	r24, 0x01	; 1
     3b8:	f1 f7       	brne	.-4      	; 0x3b6 <lcd_init+0x16>
     3ba:	00 c0       	rjmp	.+0      	; 0x3bc <lcd_init+0x1c>
     3bc:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     3be:	11 9a       	sbi	0x02, 1	; 2
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     3c0:	10 9a       	sbi	0x02, 0	; 2
    lcd_e_toggle();
     3c2:	5b df       	rcall	.-330    	; 0x27a <toggle_e>
     3c4:	81 ee       	ldi	r24, 0xE1	; 225
     3c6:	94 e0       	ldi	r25, 0x04	; 4
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <lcd_init+0x28>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <lcd_init+0x2e>
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     3ce:	00 00       	nop
     3d0:	54 df       	rcall	.-344    	; 0x27a <toggle_e>
     3d2:	95 e1       	ldi	r25, 0x15	; 21
     3d4:	9a 95       	dec	r25
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <lcd_init+0x34>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     3d8:	00 00       	nop
     3da:	4f df       	rcall	.-354    	; 0x27a <toggle_e>
     3dc:	85 e1       	ldi	r24, 0x15	; 21
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <lcd_init+0x3e>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     3e2:	00 00       	nop
    lcd_e_toggle();
     3e4:	10 98       	cbi	0x02, 0	; 2
     3e6:	49 df       	rcall	.-366    	; 0x27a <toggle_e>
     3e8:	95 e1       	ldi	r25, 0x15	; 21
     3ea:	9a 95       	dec	r25
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <lcd_init+0x4a>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     3ee:	00 00       	nop
     3f0:	88 e2       	ldi	r24, 0x28	; 40
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     3f2:	a2 df       	rcall	.-188    	; 0x338 <lcd_command>
     3f4:	88 e0       	ldi	r24, 0x08	; 8
    lcd_clrscr();                           /* display clear                */ 
     3f6:	a0 df       	rcall	.-192    	; 0x338 <lcd_command>
     3f8:	af df       	rcall	.-162    	; 0x358 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     3fa:	86 e0       	ldi	r24, 0x06	; 6
     3fc:	9d df       	rcall	.-198    	; 0x338 <lcd_command>
     3fe:	8c 2f       	mov	r24, r28
    lcd_command(dispAttr);                  /* display/cursor control       */
     400:	9b df       	rcall	.-202    	; 0x338 <lcd_command>
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <__vector_29>:
#include "lcd.h"
#include "RGBLibrary.h"
#include "Menu.h"

ISR(ADC_vect)
{
     406:	1f 92       	push	r1
     408:	0f 92       	push	r0
     40a:	0f b6       	in	r0, 0x3f	; 63
     40c:	0f 92       	push	r0
     40e:	11 24       	eor	r1, r1
     410:	0b b6       	in	r0, 0x3b	; 59
     412:	0f 92       	push	r0
     414:	cf 92       	push	r12
     416:	df 92       	push	r13
     418:	ef 92       	push	r14
     41a:	ff 92       	push	r15
     41c:	0f 93       	push	r16
     41e:	1f 93       	push	r17
     420:	2f 93       	push	r18
     422:	3f 93       	push	r19
     424:	4f 93       	push	r20
     426:	5f 93       	push	r21
     428:	6f 93       	push	r22
     42a:	7f 93       	push	r23
     42c:	8f 93       	push	r24
     42e:	9f 93       	push	r25
     430:	af 93       	push	r26
     432:	bf 93       	push	r27
     434:	ef 93       	push	r30
     436:	ff 93       	push	r31
     438:	cf 93       	push	r28
     43a:	df 93       	push	r29
     43c:	cd b7       	in	r28, 0x3d	; 61
     43e:	de b7       	in	r29, 0x3e	; 62
     440:	27 97       	sbiw	r28, 0x07	; 7
     442:	de bf       	out	0x3e, r29	; 62
     444:	cd bf       	out	0x3d, r28	; 61
	unsigned int ADC_data = ADC;							// get the ADC value, datasheet 28.9.3
     446:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     44a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	float ADC_voltage = 5.0 * ADC_data / 1024.0;			// calculate the ADC voltage
	float temp = log(10000.0 * (1024.0 / ADC_data - 1));
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	df d1       	rcall	.+958    	; 0x812 <__floatunsisf>
     454:	9b 01       	movw	r18, r22
     456:	ac 01       	movw	r20, r24
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	80 e8       	ldi	r24, 0x80	; 128
     45e:	94 e4       	ldi	r25, 0x44	; 68
     460:	70 d1       	rcall	.+736    	; 0x742 <__divsf3>
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	40 e8       	ldi	r20, 0x80	; 128
     468:	5f e3       	ldi	r21, 0x3F	; 63
     46a:	06 d1       	rcall	.+524    	; 0x678 <__subsf3>
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e4       	ldi	r19, 0x40	; 64
     470:	4c e1       	ldi	r20, 0x1C	; 28
     472:	56 e4       	ldi	r21, 0x46	; 70
     474:	a1 d2       	rcall	.+1346   	; 0x9b8 <__mulsf3>
     476:	60 d2       	rcall	.+1216   	; 0x938 <log>
     478:	6b 01       	movw	r12, r22
     47a:	7c 01       	movw	r14, r24
	float tempC = tempK - 273.15;
	
	char buffer[7];
	
	/* initialize display, cursor on */
	lcd_init(LCD_DISP_ON_CURSOR_BLINK);
     47c:	8f e0       	ldi	r24, 0x0F	; 15
     47e:	90 df       	rcall	.-224    	; 0x3a0 <lcd_init>
     480:	6b df       	rcall	.-298    	; 0x358 <lcd_clrscr>

	/* clear display and home cursor */
	lcd_clrscr();
     482:	29 e5       	ldi	r18, 0x59	; 89
	
	/* convert float into string */
	dtostrf(tempC,4,2,buffer);
     484:	37 e4       	ldi	r19, 0x47	; 71
     486:	4c eb       	ldi	r20, 0xBC	; 188
     488:	53 e3       	ldi	r21, 0x33	; 51
     48a:	c7 01       	movw	r24, r14
     48c:	b6 01       	movw	r22, r12
     48e:	94 d2       	rcall	.+1320   	; 0x9b8 <__mulsf3>
     490:	a7 01       	movw	r20, r14
     492:	96 01       	movw	r18, r12
     494:	91 d2       	rcall	.+1314   	; 0x9b8 <__mulsf3>
     496:	23 e7       	ldi	r18, 0x73	; 115
     498:	3f e7       	ldi	r19, 0x7F	; 127
     49a:	45 e7       	ldi	r20, 0x75	; 117
     49c:	59 e3       	ldi	r21, 0x39	; 57
     49e:	ed d0       	rcall	.+474    	; 0x67a <__addsf3>
     4a0:	a7 01       	movw	r20, r14
     4a2:	96 01       	movw	r18, r12
     4a4:	89 d2       	rcall	.+1298   	; 0x9b8 <__mulsf3>
     4a6:	2b ee       	ldi	r18, 0xEB	; 235
     4a8:	3f ef       	ldi	r19, 0xFF	; 255
     4aa:	43 e9       	ldi	r20, 0x93	; 147
     4ac:	5a e3       	ldi	r21, 0x3A	; 58
     4ae:	e5 d0       	rcall	.+458    	; 0x67a <__addsf3>
     4b0:	9b 01       	movw	r18, r22
     4b2:	ac 01       	movw	r20, r24
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	80 e8       	ldi	r24, 0x80	; 128
     4ba:	9f e3       	ldi	r25, 0x3F	; 63
     4bc:	42 d1       	rcall	.+644    	; 0x742 <__divsf3>
     4be:	23 e3       	ldi	r18, 0x33	; 51
     4c0:	33 e9       	ldi	r19, 0x93	; 147
     4c2:	48 e8       	ldi	r20, 0x88	; 136
     4c4:	53 e4       	ldi	r21, 0x43	; 67
     4c6:	d8 d0       	rcall	.+432    	; 0x678 <__subsf3>
     4c8:	8e 01       	movw	r16, r28
     4ca:	0f 5f       	subi	r16, 0xFF	; 255
     4cc:	1f 4f       	sbci	r17, 0xFF	; 255
     4ce:	22 e0       	ldi	r18, 0x02	; 2
     4d0:	30 e0       	ldi	r19, 0x00	; 0
     4d2:	44 e0       	ldi	r20, 0x04	; 4
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	a5 d4       	rcall	.+2378   	; 0xe22 <dtostrf>
	
	lcd_puts("Temp: ");
     4d8:	81 e1       	ldi	r24, 0x11	; 17
     4da:	92 e0       	ldi	r25, 0x02	; 2
     4dc:	52 df       	rcall	.-348    	; 0x382 <lcd_puts>
     4de:	c8 01       	movw	r24, r16
	lcd_puts(buffer);
     4e0:	50 df       	rcall	.-352    	; 0x382 <lcd_puts>
     4e2:	88 e1       	ldi	r24, 0x18	; 24
     4e4:	92 e0       	ldi	r25, 0x02	; 2
	lcd_puts("C");
     4e6:	4d df       	rcall	.-358    	; 0x382 <lcd_puts>
     4e8:	27 96       	adiw	r28, 0x07	; 7
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
	
}
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	ff 91       	pop	r31
     4fa:	ef 91       	pop	r30
     4fc:	bf 91       	pop	r27
     4fe:	af 91       	pop	r26
     500:	9f 91       	pop	r25
     502:	8f 91       	pop	r24
     504:	7f 91       	pop	r23
     506:	6f 91       	pop	r22
     508:	5f 91       	pop	r21
     50a:	4f 91       	pop	r20
     50c:	3f 91       	pop	r19
     50e:	2f 91       	pop	r18
     510:	1f 91       	pop	r17
     512:	0f 91       	pop	r16
     514:	ff 90       	pop	r15
     516:	ef 90       	pop	r14
     518:	df 90       	pop	r13
     51a:	cf 90       	pop	r12
     51c:	0f 90       	pop	r0
     51e:	0b be       	out	0x3b, r0	; 59
     520:	0f 90       	pop	r0
     522:	0f be       	out	0x3f, r0	; 63
     524:	0f 90       	pop	r0
     526:	1f 90       	pop	r1
     528:	18 95       	reti

0000052a <main>:
     52a:	92 d0       	rcall	.+292    	; 0x650 <UartInit>
     52c:	f6 d3       	rcall	.+2028   	; 0xd1a <Init>
     52e:	22 d4       	rcall	.+2116   	; 0xd74 <timer1Init>

	Init();
	
	timer1Init();
	
	Menu('0');
     530:	80 e3       	ldi	r24, 0x30	; 48
     532:	05 d0       	rcall	.+10     	; 0x53e <Menu>
	
	RGBTimer3Init();
     534:	30 d4       	rcall	.+2144   	; 0xd96 <RGBTimer3Init>
     536:	78 94       	sei
	
	sei();
     538:	1f d3       	rcall	.+1598   	; 0xb78 <ReadRows>
	
	while(1) {
		int keypressed = ReadRows();
     53a:	33 d3       	rcall	.+1638   	; 0xba2 <DecodeKeyBoard>
     53c:	fd cf       	rjmp	.-6      	; 0x538 <main+0xe>

0000053e <Menu>:
		DecodeKeyBoard(keypressed);
     53e:	cf 93       	push	r28
     540:	c8 2f       	mov	r28, r24
     542:	8c e0       	ldi	r24, 0x0C	; 12
#include "MKBLibrary.h"

void Menu(char menu)
{
	/* initialize display, cursor on */
	lcd_init(LCD_DISP_ON);
     544:	2d df       	rcall	.-422    	; 0x3a0 <lcd_init>
	
	/* clear display and home cursor */
	lcd_clrscr();
     546:	08 df       	rcall	.-496    	; 0x358 <lcd_clrscr>
     548:	c3 33       	cpi	r28, 0x33	; 51
	
	
	switch (menu)
     54a:	61 f1       	breq	.+88     	; 0x5a4 <Menu+0x66>
     54c:	28 f4       	brcc	.+10     	; 0x558 <Menu+0x1a>
     54e:	c1 33       	cpi	r28, 0x31	; 49
     550:	49 f0       	breq	.+18     	; 0x564 <Menu+0x26>
     552:	c2 33       	cpi	r28, 0x32	; 50
     554:	d1 f0       	breq	.+52     	; 0x58a <Menu+0x4c>
     556:	4d c0       	rjmp	.+154    	; 0x5f2 <Menu+0xb4>
     558:	c4 33       	cpi	r28, 0x34	; 52
     55a:	59 f1       	breq	.+86     	; 0x5b2 <Menu+0x74>
     55c:	c5 33       	cpi	r28, 0x35	; 53
     55e:	09 f4       	brne	.+2      	; 0x562 <Menu+0x24>
     560:	41 c0       	rjmp	.+130    	; 0x5e4 <Menu+0xa6>
     562:	47 c0       	rjmp	.+142    	; 0x5f2 <Menu+0xb4>
     564:	8a e1       	ldi	r24, 0x1A	; 26
	{
		case '1':
			lcd_puts("3=Windows");
     566:	92 e0       	ldi	r25, 0x02	; 2
     568:	0c df       	rcall	.-488    	; 0x382 <lcd_puts>
     56a:	61 e0       	ldi	r22, 0x01	; 1
			lcd_gotoxy(0,1);
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	ec de       	rcall	.-552    	; 0x348 <lcd_gotoxy>
     570:	84 e2       	ldi	r24, 0x24	; 36
			lcd_puts("4=Garage");
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	06 df       	rcall	.-500    	; 0x382 <lcd_puts>
     576:	60 e0       	ldi	r22, 0x00	; 0
			lcd_gotoxy(10,0);
     578:	8a e0       	ldi	r24, 0x0A	; 10
     57a:	e6 de       	rcall	.-564    	; 0x348 <lcd_gotoxy>
     57c:	8d e2       	ldi	r24, 0x2D	; 45
			lcd_puts("0=Back");
     57e:	92 e0       	ldi	r25, 0x02	; 2
     580:	00 df       	rcall	.-512    	; 0x382 <lcd_puts>
     582:	81 e3       	ldi	r24, 0x31	; 49
			currentMenu = '1';
     584:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
		break;
     588:	46 c0       	rjmp	.+140    	; 0x616 <Menu+0xd8>
		case '2':
			lcd_puts("1=Turn On");
     58a:	84 e3       	ldi	r24, 0x34	; 52
     58c:	92 e0       	ldi	r25, 0x02	; 2
     58e:	f9 de       	rcall	.-526    	; 0x382 <lcd_puts>
			lcd_gotoxy(0,1);
     590:	61 e0       	ldi	r22, 0x01	; 1
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	d9 de       	rcall	.-590    	; 0x348 <lcd_gotoxy>
     596:	8e e3       	ldi	r24, 0x3E	; 62
			lcd_puts("2=Turn Off");
     598:	92 e0       	ldi	r25, 0x02	; 2
     59a:	f3 de       	rcall	.-538    	; 0x382 <lcd_puts>
     59c:	82 e3       	ldi	r24, 0x32	; 50
			currentMenu = '2';
     59e:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
     5a2:	39 c0       	rjmp	.+114    	; 0x616 <Menu+0xd8>
		break;
		case '3':
			lcd_puts("3=Color");
     5a4:	89 e4       	ldi	r24, 0x49	; 73
     5a6:	92 e0       	ldi	r25, 0x02	; 2
     5a8:	ec de       	rcall	.-552    	; 0x382 <lcd_puts>
			currentMenu = '3';
     5aa:	83 e3       	ldi	r24, 0x33	; 51
     5ac:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
		break;
		case '4':
			lcd_puts("1=White");
     5b0:	32 c0       	rjmp	.+100    	; 0x616 <Menu+0xd8>
     5b2:	81 e5       	ldi	r24, 0x51	; 81
     5b4:	92 e0       	ldi	r25, 0x02	; 2
			lcd_gotoxy(8,0);
     5b6:	e5 de       	rcall	.-566    	; 0x382 <lcd_puts>
     5b8:	60 e0       	ldi	r22, 0x00	; 0
     5ba:	88 e0       	ldi	r24, 0x08	; 8
			lcd_puts("2=Yellow");
     5bc:	c5 de       	rcall	.-630    	; 0x348 <lcd_gotoxy>
     5be:	89 e5       	ldi	r24, 0x59	; 89
     5c0:	92 e0       	ldi	r25, 0x02	; 2
			lcd_gotoxy(0,1);
     5c2:	df de       	rcall	.-578    	; 0x382 <lcd_puts>
     5c4:	61 e0       	ldi	r22, 0x01	; 1
     5c6:	80 e0       	ldi	r24, 0x00	; 0
     5c8:	bf de       	rcall	.-642    	; 0x348 <lcd_gotoxy>
			lcd_puts("3=Blue");
     5ca:	82 e6       	ldi	r24, 0x62	; 98
     5cc:	92 e0       	ldi	r25, 0x02	; 2
     5ce:	d9 de       	rcall	.-590    	; 0x382 <lcd_puts>
			lcd_gotoxy(10,1);
     5d0:	61 e0       	ldi	r22, 0x01	; 1
     5d2:	8a e0       	ldi	r24, 0x0A	; 10
     5d4:	b9 de       	rcall	.-654    	; 0x348 <lcd_gotoxy>
			lcd_puts("4=Pink");
     5d6:	89 e6       	ldi	r24, 0x69	; 105
     5d8:	92 e0       	ldi	r25, 0x02	; 2
     5da:	d3 de       	rcall	.-602    	; 0x382 <lcd_puts>
			currentMenu = '4';
     5dc:	84 e3       	ldi	r24, 0x34	; 52
     5de:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
		break;
		case '5':
			lcd_puts("1=Adjust");
     5e2:	19 c0       	rjmp	.+50     	; 0x616 <Menu+0xd8>
     5e4:	80 e7       	ldi	r24, 0x70	; 112
     5e6:	92 e0       	ldi	r25, 0x02	; 2
			currentMenu = '5';
     5e8:	cc de       	rcall	.-616    	; 0x382 <lcd_puts>
     5ea:	85 e3       	ldi	r24, 0x35	; 53
     5ec:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
		break;
		default:
			lcd_puts("1=Light");
     5f0:	12 c0       	rjmp	.+36     	; 0x616 <Menu+0xd8>
     5f2:	89 e7       	ldi	r24, 0x79	; 121
     5f4:	92 e0       	ldi	r25, 0x02	; 2
     5f6:	c5 de       	rcall	.-630    	; 0x382 <lcd_puts>
			lcd_gotoxy(0,1);
     5f8:	61 e0       	ldi	r22, 0x01	; 1
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	a5 de       	rcall	.-694    	; 0x348 <lcd_gotoxy>
     5fe:	81 e8       	ldi	r24, 0x81	; 129
			lcd_puts("2=Temp");
     600:	92 e0       	ldi	r25, 0x02	; 2
     602:	bf de       	rcall	.-642    	; 0x382 <lcd_puts>
     604:	61 e0       	ldi	r22, 0x01	; 1
     606:	8a e0       	ldi	r24, 0x0A	; 10
			lcd_gotoxy(10,1);
     608:	9f de       	rcall	.-706    	; 0x348 <lcd_gotoxy>
     60a:	88 e8       	ldi	r24, 0x88	; 136
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	b9 de       	rcall	.-654    	; 0x382 <lcd_puts>
			lcd_puts("9=Next");
     610:	80 e3       	ldi	r24, 0x30	; 48
     612:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <currentMenu>
     616:	cf 91       	pop	r28
			currentMenu = '0';
     618:	08 95       	ret

0000061a <UartPutchar>:
	(0 << UMSEL00);
}

void UartPutchar(char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
     61a:	e0 ec       	ldi	r30, 0xC0	; 192
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	90 81       	ld	r25, Z
     620:	95 ff       	sbrs	r25, 5
     622:	fd cf       	rjmp	.-6      	; 0x61e <UartPutchar+0x4>
	UDR0 = data;
     624:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     628:	08 95       	ret

0000062a <UartGetchar>:
}

int UartGetchar(void)
{
     62a:	cf 93       	push	r28
	char data;
	
	while (!(UCSR0A & (1 << RXC0)));
     62c:	e0 ec       	ldi	r30, 0xC0	; 192
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	80 81       	ld	r24, Z
     632:	88 23       	and	r24, r24
     634:	ec f7       	brge	.-6      	; 0x630 <UartGetchar+0x6>
	
	data = UDR0;
     636:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	if (data == '\n') {
     63a:	ca 30       	cpi	r28, 0x0A	; 10
     63c:	29 f0       	breq	.+10     	; 0x648 <UartGetchar+0x1e>
		return -1;
	}
	UartPutchar(data);
     63e:	8c 2f       	mov	r24, r28
     640:	ec df       	rcall	.-40     	; 0x61a <UartPutchar>

	return data;
     642:	8c 2f       	mov	r24, r28
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	02 c0       	rjmp	.+4      	; 0x64c <UartGetchar+0x22>
	while (!(UCSR0A & (1 << RXC0)));
	
	data = UDR0;
	
	if (data == '\n') {
		return -1;
     648:	8f ef       	ldi	r24, 0xFF	; 255
     64a:	9f ef       	ldi	r25, 0xFF	; 255
	}
	UartPutchar(data);

	return data;
     64c:	cf 91       	pop	r28
     64e:	08 95       	ret

00000650 <UartInit>:

static FILE the_stdio = FDEV_SETUP_STREAM(UartPutchar, UartGetchar, _FDEV_SETUP_RW);

void UartInit(void)
{
	stdout = &the_stdio;
     650:	e2 e9       	ldi	r30, 0x92	; 146
     652:	f2 e0       	ldi	r31, 0x02	; 2
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	93 83       	std	Z+3, r25	; 0x03
     65a:	82 83       	std	Z+2, r24	; 0x02
	stdin = &the_stdio;
     65c:	91 83       	std	Z+1, r25	; 0x01
     65e:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
     660:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = UBRRL_VALUE;
     664:	87 e6       	ldi	r24, 0x67	; 103
     666:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

	#if USE_2X
	UCSR0A |= (1 << U2X0);
	#endif

	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     66a:	88 e1       	ldi	r24, 0x18	; 24
     66c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

	// 8-bit, 1 stop bit, no parity, asynchronous UART
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00) | (0 << USBS0) |
     670:	86 e0       	ldi	r24, 0x06	; 6
     672:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     676:	08 95       	ret

00000678 <__subsf3>:
     678:	50 58       	subi	r21, 0x80	; 128

0000067a <__addsf3>:
     67a:	bb 27       	eor	r27, r27
     67c:	aa 27       	eor	r26, r26
     67e:	0e d0       	rcall	.+28     	; 0x69c <__addsf3x>
     680:	1c c1       	rjmp	.+568    	; 0x8ba <__fp_round>
     682:	0d d1       	rcall	.+538    	; 0x89e <__fp_pscA>
     684:	30 f0       	brcs	.+12     	; 0x692 <__addsf3+0x18>
     686:	12 d1       	rcall	.+548    	; 0x8ac <__fp_pscB>
     688:	20 f0       	brcs	.+8      	; 0x692 <__addsf3+0x18>
     68a:	31 f4       	brne	.+12     	; 0x698 <__addsf3+0x1e>
     68c:	9f 3f       	cpi	r25, 0xFF	; 255
     68e:	11 f4       	brne	.+4      	; 0x694 <__addsf3+0x1a>
     690:	1e f4       	brtc	.+6      	; 0x698 <__addsf3+0x1e>
     692:	02 c1       	rjmp	.+516    	; 0x898 <__fp_nan>
     694:	0e f4       	brtc	.+2      	; 0x698 <__addsf3+0x1e>
     696:	e0 95       	com	r30
     698:	e7 fb       	bst	r30, 7
     69a:	f8 c0       	rjmp	.+496    	; 0x88c <__fp_inf>

0000069c <__addsf3x>:
     69c:	e9 2f       	mov	r30, r25
     69e:	1e d1       	rcall	.+572    	; 0x8dc <__fp_split3>
     6a0:	80 f3       	brcs	.-32     	; 0x682 <__addsf3+0x8>
     6a2:	ba 17       	cp	r27, r26
     6a4:	62 07       	cpc	r22, r18
     6a6:	73 07       	cpc	r23, r19
     6a8:	84 07       	cpc	r24, r20
     6aa:	95 07       	cpc	r25, r21
     6ac:	18 f0       	brcs	.+6      	; 0x6b4 <__addsf3x+0x18>
     6ae:	71 f4       	brne	.+28     	; 0x6cc <__addsf3x+0x30>
     6b0:	9e f5       	brtc	.+102    	; 0x718 <__addsf3x+0x7c>
     6b2:	36 c1       	rjmp	.+620    	; 0x920 <__fp_zero>
     6b4:	0e f4       	brtc	.+2      	; 0x6b8 <__addsf3x+0x1c>
     6b6:	e0 95       	com	r30
     6b8:	0b 2e       	mov	r0, r27
     6ba:	ba 2f       	mov	r27, r26
     6bc:	a0 2d       	mov	r26, r0
     6be:	0b 01       	movw	r0, r22
     6c0:	b9 01       	movw	r22, r18
     6c2:	90 01       	movw	r18, r0
     6c4:	0c 01       	movw	r0, r24
     6c6:	ca 01       	movw	r24, r20
     6c8:	a0 01       	movw	r20, r0
     6ca:	11 24       	eor	r1, r1
     6cc:	ff 27       	eor	r31, r31
     6ce:	59 1b       	sub	r21, r25
     6d0:	99 f0       	breq	.+38     	; 0x6f8 <__addsf3x+0x5c>
     6d2:	59 3f       	cpi	r21, 0xF9	; 249
     6d4:	50 f4       	brcc	.+20     	; 0x6ea <__addsf3x+0x4e>
     6d6:	50 3e       	cpi	r21, 0xE0	; 224
     6d8:	68 f1       	brcs	.+90     	; 0x734 <__addsf3x+0x98>
     6da:	1a 16       	cp	r1, r26
     6dc:	f0 40       	sbci	r31, 0x00	; 0
     6de:	a2 2f       	mov	r26, r18
     6e0:	23 2f       	mov	r18, r19
     6e2:	34 2f       	mov	r19, r20
     6e4:	44 27       	eor	r20, r20
     6e6:	58 5f       	subi	r21, 0xF8	; 248
     6e8:	f3 cf       	rjmp	.-26     	; 0x6d0 <__addsf3x+0x34>
     6ea:	46 95       	lsr	r20
     6ec:	37 95       	ror	r19
     6ee:	27 95       	ror	r18
     6f0:	a7 95       	ror	r26
     6f2:	f0 40       	sbci	r31, 0x00	; 0
     6f4:	53 95       	inc	r21
     6f6:	c9 f7       	brne	.-14     	; 0x6ea <__addsf3x+0x4e>
     6f8:	7e f4       	brtc	.+30     	; 0x718 <__addsf3x+0x7c>
     6fa:	1f 16       	cp	r1, r31
     6fc:	ba 0b       	sbc	r27, r26
     6fe:	62 0b       	sbc	r22, r18
     700:	73 0b       	sbc	r23, r19
     702:	84 0b       	sbc	r24, r20
     704:	ba f0       	brmi	.+46     	; 0x734 <__addsf3x+0x98>
     706:	91 50       	subi	r25, 0x01	; 1
     708:	a1 f0       	breq	.+40     	; 0x732 <__addsf3x+0x96>
     70a:	ff 0f       	add	r31, r31
     70c:	bb 1f       	adc	r27, r27
     70e:	66 1f       	adc	r22, r22
     710:	77 1f       	adc	r23, r23
     712:	88 1f       	adc	r24, r24
     714:	c2 f7       	brpl	.-16     	; 0x706 <__addsf3x+0x6a>
     716:	0e c0       	rjmp	.+28     	; 0x734 <__addsf3x+0x98>
     718:	ba 0f       	add	r27, r26
     71a:	62 1f       	adc	r22, r18
     71c:	73 1f       	adc	r23, r19
     71e:	84 1f       	adc	r24, r20
     720:	48 f4       	brcc	.+18     	; 0x734 <__addsf3x+0x98>
     722:	87 95       	ror	r24
     724:	77 95       	ror	r23
     726:	67 95       	ror	r22
     728:	b7 95       	ror	r27
     72a:	f7 95       	ror	r31
     72c:	9e 3f       	cpi	r25, 0xFE	; 254
     72e:	08 f0       	brcs	.+2      	; 0x732 <__addsf3x+0x96>
     730:	b3 cf       	rjmp	.-154    	; 0x698 <__addsf3+0x1e>
     732:	93 95       	inc	r25
     734:	88 0f       	add	r24, r24
     736:	08 f0       	brcs	.+2      	; 0x73a <__addsf3x+0x9e>
     738:	99 27       	eor	r25, r25
     73a:	ee 0f       	add	r30, r30
     73c:	97 95       	ror	r25
     73e:	87 95       	ror	r24
     740:	08 95       	ret

00000742 <__divsf3>:
     742:	0c d0       	rcall	.+24     	; 0x75c <__divsf3x>
     744:	ba c0       	rjmp	.+372    	; 0x8ba <__fp_round>
     746:	b2 d0       	rcall	.+356    	; 0x8ac <__fp_pscB>
     748:	40 f0       	brcs	.+16     	; 0x75a <__divsf3+0x18>
     74a:	a9 d0       	rcall	.+338    	; 0x89e <__fp_pscA>
     74c:	30 f0       	brcs	.+12     	; 0x75a <__divsf3+0x18>
     74e:	21 f4       	brne	.+8      	; 0x758 <__divsf3+0x16>
     750:	5f 3f       	cpi	r21, 0xFF	; 255
     752:	19 f0       	breq	.+6      	; 0x75a <__divsf3+0x18>
     754:	9b c0       	rjmp	.+310    	; 0x88c <__fp_inf>
     756:	51 11       	cpse	r21, r1
     758:	e4 c0       	rjmp	.+456    	; 0x922 <__fp_szero>
     75a:	9e c0       	rjmp	.+316    	; 0x898 <__fp_nan>

0000075c <__divsf3x>:
     75c:	bf d0       	rcall	.+382    	; 0x8dc <__fp_split3>
     75e:	98 f3       	brcs	.-26     	; 0x746 <__divsf3+0x4>

00000760 <__divsf3_pse>:
     760:	99 23       	and	r25, r25
     762:	c9 f3       	breq	.-14     	; 0x756 <__divsf3+0x14>
     764:	55 23       	and	r21, r21
     766:	b1 f3       	breq	.-20     	; 0x754 <__divsf3+0x12>
     768:	95 1b       	sub	r25, r21
     76a:	55 0b       	sbc	r21, r21
     76c:	bb 27       	eor	r27, r27
     76e:	aa 27       	eor	r26, r26
     770:	62 17       	cp	r22, r18
     772:	73 07       	cpc	r23, r19
     774:	84 07       	cpc	r24, r20
     776:	38 f0       	brcs	.+14     	; 0x786 <__divsf3_pse+0x26>
     778:	9f 5f       	subi	r25, 0xFF	; 255
     77a:	5f 4f       	sbci	r21, 0xFF	; 255
     77c:	22 0f       	add	r18, r18
     77e:	33 1f       	adc	r19, r19
     780:	44 1f       	adc	r20, r20
     782:	aa 1f       	adc	r26, r26
     784:	a9 f3       	breq	.-22     	; 0x770 <__divsf3_pse+0x10>
     786:	33 d0       	rcall	.+102    	; 0x7ee <__divsf3_pse+0x8e>
     788:	0e 2e       	mov	r0, r30
     78a:	3a f0       	brmi	.+14     	; 0x79a <__divsf3_pse+0x3a>
     78c:	e0 e8       	ldi	r30, 0x80	; 128
     78e:	30 d0       	rcall	.+96     	; 0x7f0 <__divsf3_pse+0x90>
     790:	91 50       	subi	r25, 0x01	; 1
     792:	50 40       	sbci	r21, 0x00	; 0
     794:	e6 95       	lsr	r30
     796:	00 1c       	adc	r0, r0
     798:	ca f7       	brpl	.-14     	; 0x78c <__divsf3_pse+0x2c>
     79a:	29 d0       	rcall	.+82     	; 0x7ee <__divsf3_pse+0x8e>
     79c:	fe 2f       	mov	r31, r30
     79e:	27 d0       	rcall	.+78     	; 0x7ee <__divsf3_pse+0x8e>
     7a0:	66 0f       	add	r22, r22
     7a2:	77 1f       	adc	r23, r23
     7a4:	88 1f       	adc	r24, r24
     7a6:	bb 1f       	adc	r27, r27
     7a8:	26 17       	cp	r18, r22
     7aa:	37 07       	cpc	r19, r23
     7ac:	48 07       	cpc	r20, r24
     7ae:	ab 07       	cpc	r26, r27
     7b0:	b0 e8       	ldi	r27, 0x80	; 128
     7b2:	09 f0       	breq	.+2      	; 0x7b6 <__divsf3_pse+0x56>
     7b4:	bb 0b       	sbc	r27, r27
     7b6:	80 2d       	mov	r24, r0
     7b8:	bf 01       	movw	r22, r30
     7ba:	ff 27       	eor	r31, r31
     7bc:	93 58       	subi	r25, 0x83	; 131
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	2a f0       	brmi	.+10     	; 0x7cc <__divsf3_pse+0x6c>
     7c2:	9e 3f       	cpi	r25, 0xFE	; 254
     7c4:	51 05       	cpc	r21, r1
     7c6:	68 f0       	brcs	.+26     	; 0x7e2 <__divsf3_pse+0x82>
     7c8:	61 c0       	rjmp	.+194    	; 0x88c <__fp_inf>
     7ca:	ab c0       	rjmp	.+342    	; 0x922 <__fp_szero>
     7cc:	5f 3f       	cpi	r21, 0xFF	; 255
     7ce:	ec f3       	brlt	.-6      	; 0x7ca <__divsf3_pse+0x6a>
     7d0:	98 3e       	cpi	r25, 0xE8	; 232
     7d2:	dc f3       	brlt	.-10     	; 0x7ca <__divsf3_pse+0x6a>
     7d4:	86 95       	lsr	r24
     7d6:	77 95       	ror	r23
     7d8:	67 95       	ror	r22
     7da:	b7 95       	ror	r27
     7dc:	f7 95       	ror	r31
     7de:	9f 5f       	subi	r25, 0xFF	; 255
     7e0:	c9 f7       	brne	.-14     	; 0x7d4 <__divsf3_pse+0x74>
     7e2:	88 0f       	add	r24, r24
     7e4:	91 1d       	adc	r25, r1
     7e6:	96 95       	lsr	r25
     7e8:	87 95       	ror	r24
     7ea:	97 f9       	bld	r25, 7
     7ec:	08 95       	ret
     7ee:	e1 e0       	ldi	r30, 0x01	; 1
     7f0:	66 0f       	add	r22, r22
     7f2:	77 1f       	adc	r23, r23
     7f4:	88 1f       	adc	r24, r24
     7f6:	bb 1f       	adc	r27, r27
     7f8:	62 17       	cp	r22, r18
     7fa:	73 07       	cpc	r23, r19
     7fc:	84 07       	cpc	r24, r20
     7fe:	ba 07       	cpc	r27, r26
     800:	20 f0       	brcs	.+8      	; 0x80a <__divsf3_pse+0xaa>
     802:	62 1b       	sub	r22, r18
     804:	73 0b       	sbc	r23, r19
     806:	84 0b       	sbc	r24, r20
     808:	ba 0b       	sbc	r27, r26
     80a:	ee 1f       	adc	r30, r30
     80c:	88 f7       	brcc	.-30     	; 0x7f0 <__divsf3_pse+0x90>
     80e:	e0 95       	com	r30
     810:	08 95       	ret

00000812 <__floatunsisf>:
     812:	e8 94       	clt
     814:	09 c0       	rjmp	.+18     	; 0x828 <__floatsisf+0x12>

00000816 <__floatsisf>:
     816:	97 fb       	bst	r25, 7
     818:	3e f4       	brtc	.+14     	; 0x828 <__floatsisf+0x12>
     81a:	90 95       	com	r25
     81c:	80 95       	com	r24
     81e:	70 95       	com	r23
     820:	61 95       	neg	r22
     822:	7f 4f       	sbci	r23, 0xFF	; 255
     824:	8f 4f       	sbci	r24, 0xFF	; 255
     826:	9f 4f       	sbci	r25, 0xFF	; 255
     828:	99 23       	and	r25, r25
     82a:	a9 f0       	breq	.+42     	; 0x856 <__floatsisf+0x40>
     82c:	f9 2f       	mov	r31, r25
     82e:	96 e9       	ldi	r25, 0x96	; 150
     830:	bb 27       	eor	r27, r27
     832:	93 95       	inc	r25
     834:	f6 95       	lsr	r31
     836:	87 95       	ror	r24
     838:	77 95       	ror	r23
     83a:	67 95       	ror	r22
     83c:	b7 95       	ror	r27
     83e:	f1 11       	cpse	r31, r1
     840:	f8 cf       	rjmp	.-16     	; 0x832 <__floatsisf+0x1c>
     842:	fa f4       	brpl	.+62     	; 0x882 <__floatsisf+0x6c>
     844:	bb 0f       	add	r27, r27
     846:	11 f4       	brne	.+4      	; 0x84c <__floatsisf+0x36>
     848:	60 ff       	sbrs	r22, 0
     84a:	1b c0       	rjmp	.+54     	; 0x882 <__floatsisf+0x6c>
     84c:	6f 5f       	subi	r22, 0xFF	; 255
     84e:	7f 4f       	sbci	r23, 0xFF	; 255
     850:	8f 4f       	sbci	r24, 0xFF	; 255
     852:	9f 4f       	sbci	r25, 0xFF	; 255
     854:	16 c0       	rjmp	.+44     	; 0x882 <__floatsisf+0x6c>
     856:	88 23       	and	r24, r24
     858:	11 f0       	breq	.+4      	; 0x85e <__floatsisf+0x48>
     85a:	96 e9       	ldi	r25, 0x96	; 150
     85c:	11 c0       	rjmp	.+34     	; 0x880 <__floatsisf+0x6a>
     85e:	77 23       	and	r23, r23
     860:	21 f0       	breq	.+8      	; 0x86a <__floatsisf+0x54>
     862:	9e e8       	ldi	r25, 0x8E	; 142
     864:	87 2f       	mov	r24, r23
     866:	76 2f       	mov	r23, r22
     868:	05 c0       	rjmp	.+10     	; 0x874 <__floatsisf+0x5e>
     86a:	66 23       	and	r22, r22
     86c:	71 f0       	breq	.+28     	; 0x88a <__floatsisf+0x74>
     86e:	96 e8       	ldi	r25, 0x86	; 134
     870:	86 2f       	mov	r24, r22
     872:	70 e0       	ldi	r23, 0x00	; 0
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	2a f0       	brmi	.+10     	; 0x882 <__floatsisf+0x6c>
     878:	9a 95       	dec	r25
     87a:	66 0f       	add	r22, r22
     87c:	77 1f       	adc	r23, r23
     87e:	88 1f       	adc	r24, r24
     880:	da f7       	brpl	.-10     	; 0x878 <__floatsisf+0x62>
     882:	88 0f       	add	r24, r24
     884:	96 95       	lsr	r25
     886:	87 95       	ror	r24
     888:	97 f9       	bld	r25, 7
     88a:	08 95       	ret

0000088c <__fp_inf>:
     88c:	97 f9       	bld	r25, 7
     88e:	9f 67       	ori	r25, 0x7F	; 127
     890:	80 e8       	ldi	r24, 0x80	; 128
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	08 95       	ret

00000898 <__fp_nan>:
     898:	9f ef       	ldi	r25, 0xFF	; 255
     89a:	80 ec       	ldi	r24, 0xC0	; 192
     89c:	08 95       	ret

0000089e <__fp_pscA>:
     89e:	00 24       	eor	r0, r0
     8a0:	0a 94       	dec	r0
     8a2:	16 16       	cp	r1, r22
     8a4:	17 06       	cpc	r1, r23
     8a6:	18 06       	cpc	r1, r24
     8a8:	09 06       	cpc	r0, r25
     8aa:	08 95       	ret

000008ac <__fp_pscB>:
     8ac:	00 24       	eor	r0, r0
     8ae:	0a 94       	dec	r0
     8b0:	12 16       	cp	r1, r18
     8b2:	13 06       	cpc	r1, r19
     8b4:	14 06       	cpc	r1, r20
     8b6:	05 06       	cpc	r0, r21
     8b8:	08 95       	ret

000008ba <__fp_round>:
     8ba:	09 2e       	mov	r0, r25
     8bc:	03 94       	inc	r0
     8be:	00 0c       	add	r0, r0
     8c0:	11 f4       	brne	.+4      	; 0x8c6 <__fp_round+0xc>
     8c2:	88 23       	and	r24, r24
     8c4:	52 f0       	brmi	.+20     	; 0x8da <__fp_round+0x20>
     8c6:	bb 0f       	add	r27, r27
     8c8:	40 f4       	brcc	.+16     	; 0x8da <__fp_round+0x20>
     8ca:	bf 2b       	or	r27, r31
     8cc:	11 f4       	brne	.+4      	; 0x8d2 <__fp_round+0x18>
     8ce:	60 ff       	sbrs	r22, 0
     8d0:	04 c0       	rjmp	.+8      	; 0x8da <__fp_round+0x20>
     8d2:	6f 5f       	subi	r22, 0xFF	; 255
     8d4:	7f 4f       	sbci	r23, 0xFF	; 255
     8d6:	8f 4f       	sbci	r24, 0xFF	; 255
     8d8:	9f 4f       	sbci	r25, 0xFF	; 255
     8da:	08 95       	ret

000008dc <__fp_split3>:
     8dc:	57 fd       	sbrc	r21, 7
     8de:	90 58       	subi	r25, 0x80	; 128
     8e0:	44 0f       	add	r20, r20
     8e2:	55 1f       	adc	r21, r21
     8e4:	59 f0       	breq	.+22     	; 0x8fc <__fp_splitA+0x10>
     8e6:	5f 3f       	cpi	r21, 0xFF	; 255
     8e8:	71 f0       	breq	.+28     	; 0x906 <__fp_splitA+0x1a>
     8ea:	47 95       	ror	r20

000008ec <__fp_splitA>:
     8ec:	88 0f       	add	r24, r24
     8ee:	97 fb       	bst	r25, 7
     8f0:	99 1f       	adc	r25, r25
     8f2:	61 f0       	breq	.+24     	; 0x90c <__fp_splitA+0x20>
     8f4:	9f 3f       	cpi	r25, 0xFF	; 255
     8f6:	79 f0       	breq	.+30     	; 0x916 <__fp_splitA+0x2a>
     8f8:	87 95       	ror	r24
     8fa:	08 95       	ret
     8fc:	12 16       	cp	r1, r18
     8fe:	13 06       	cpc	r1, r19
     900:	14 06       	cpc	r1, r20
     902:	55 1f       	adc	r21, r21
     904:	f2 cf       	rjmp	.-28     	; 0x8ea <__fp_split3+0xe>
     906:	46 95       	lsr	r20
     908:	f1 df       	rcall	.-30     	; 0x8ec <__fp_splitA>
     90a:	08 c0       	rjmp	.+16     	; 0x91c <__fp_splitA+0x30>
     90c:	16 16       	cp	r1, r22
     90e:	17 06       	cpc	r1, r23
     910:	18 06       	cpc	r1, r24
     912:	99 1f       	adc	r25, r25
     914:	f1 cf       	rjmp	.-30     	; 0x8f8 <__fp_splitA+0xc>
     916:	86 95       	lsr	r24
     918:	71 05       	cpc	r23, r1
     91a:	61 05       	cpc	r22, r1
     91c:	08 94       	sec
     91e:	08 95       	ret

00000920 <__fp_zero>:
     920:	e8 94       	clt

00000922 <__fp_szero>:
     922:	bb 27       	eor	r27, r27
     924:	66 27       	eor	r22, r22
     926:	77 27       	eor	r23, r23
     928:	cb 01       	movw	r24, r22
     92a:	97 f9       	bld	r25, 7
     92c:	08 95       	ret
     92e:	0e f0       	brts	.+2      	; 0x932 <__fp_szero+0x10>
     930:	a6 c0       	rjmp	.+332    	; 0xa7e <__fp_mpack>
     932:	b2 cf       	rjmp	.-156    	; 0x898 <__fp_nan>
     934:	68 94       	set
     936:	aa cf       	rjmp	.-172    	; 0x88c <__fp_inf>

00000938 <log>:
     938:	d9 df       	rcall	.-78     	; 0x8ec <__fp_splitA>
     93a:	c8 f3       	brcs	.-14     	; 0x92e <__fp_szero+0xc>
     93c:	99 23       	and	r25, r25
     93e:	d1 f3       	breq	.-12     	; 0x934 <__fp_szero+0x12>
     940:	c6 f3       	brts	.-16     	; 0x932 <__fp_szero+0x10>
     942:	df 93       	push	r29
     944:	cf 93       	push	r28
     946:	1f 93       	push	r17
     948:	0f 93       	push	r16
     94a:	ff 92       	push	r15
     94c:	c9 2f       	mov	r28, r25
     94e:	dd 27       	eor	r29, r29
     950:	88 23       	and	r24, r24
     952:	2a f0       	brmi	.+10     	; 0x95e <log+0x26>
     954:	21 97       	sbiw	r28, 0x01	; 1
     956:	66 0f       	add	r22, r22
     958:	77 1f       	adc	r23, r23
     95a:	88 1f       	adc	r24, r24
     95c:	da f7       	brpl	.-10     	; 0x954 <log+0x1c>
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	40 e8       	ldi	r20, 0x80	; 128
     964:	5f eb       	ldi	r21, 0xBF	; 191
     966:	9f e3       	ldi	r25, 0x3F	; 63
     968:	88 39       	cpi	r24, 0x98	; 152
     96a:	20 f0       	brcs	.+8      	; 0x974 <log+0x3c>
     96c:	80 3e       	cpi	r24, 0xE0	; 224
     96e:	30 f0       	brcs	.+12     	; 0x97c <log+0x44>
     970:	21 96       	adiw	r28, 0x01	; 1
     972:	8f 77       	andi	r24, 0x7F	; 127
     974:	82 de       	rcall	.-764    	; 0x67a <__addsf3>
     976:	e4 ee       	ldi	r30, 0xE4	; 228
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	03 c0       	rjmp	.+6      	; 0x982 <log+0x4a>
     97c:	7e de       	rcall	.-772    	; 0x67a <__addsf3>
     97e:	e1 e1       	ldi	r30, 0x11	; 17
     980:	f1 e0       	ldi	r31, 0x01	; 1
     982:	8b d0       	rcall	.+278    	; 0xa9a <__fp_powser>
     984:	8b 01       	movw	r16, r22
     986:	be 01       	movw	r22, r28
     988:	ec 01       	movw	r28, r24
     98a:	fb 2e       	mov	r15, r27
     98c:	6f 57       	subi	r22, 0x7F	; 127
     98e:	71 09       	sbc	r23, r1
     990:	75 95       	asr	r23
     992:	77 1f       	adc	r23, r23
     994:	88 0b       	sbc	r24, r24
     996:	99 0b       	sbc	r25, r25
     998:	3e df       	rcall	.-388    	; 0x816 <__floatsisf>
     99a:	28 e1       	ldi	r18, 0x18	; 24
     99c:	32 e7       	ldi	r19, 0x72	; 114
     99e:	41 e3       	ldi	r20, 0x31	; 49
     9a0:	5f e3       	ldi	r21, 0x3F	; 63
     9a2:	16 d0       	rcall	.+44     	; 0x9d0 <__mulsf3x>
     9a4:	af 2d       	mov	r26, r15
     9a6:	98 01       	movw	r18, r16
     9a8:	ae 01       	movw	r20, r28
     9aa:	ff 90       	pop	r15
     9ac:	0f 91       	pop	r16
     9ae:	1f 91       	pop	r17
     9b0:	cf 91       	pop	r28
     9b2:	df 91       	pop	r29
     9b4:	73 de       	rcall	.-794    	; 0x69c <__addsf3x>
     9b6:	81 cf       	rjmp	.-254    	; 0x8ba <__fp_round>

000009b8 <__mulsf3>:
     9b8:	0b d0       	rcall	.+22     	; 0x9d0 <__mulsf3x>
     9ba:	7f cf       	rjmp	.-258    	; 0x8ba <__fp_round>
     9bc:	70 df       	rcall	.-288    	; 0x89e <__fp_pscA>
     9be:	28 f0       	brcs	.+10     	; 0x9ca <__mulsf3+0x12>
     9c0:	75 df       	rcall	.-278    	; 0x8ac <__fp_pscB>
     9c2:	18 f0       	brcs	.+6      	; 0x9ca <__mulsf3+0x12>
     9c4:	95 23       	and	r25, r21
     9c6:	09 f0       	breq	.+2      	; 0x9ca <__mulsf3+0x12>
     9c8:	61 cf       	rjmp	.-318    	; 0x88c <__fp_inf>
     9ca:	66 cf       	rjmp	.-308    	; 0x898 <__fp_nan>
     9cc:	11 24       	eor	r1, r1
     9ce:	a9 cf       	rjmp	.-174    	; 0x922 <__fp_szero>

000009d0 <__mulsf3x>:
     9d0:	85 df       	rcall	.-246    	; 0x8dc <__fp_split3>
     9d2:	a0 f3       	brcs	.-24     	; 0x9bc <__mulsf3+0x4>

000009d4 <__mulsf3_pse>:
     9d4:	95 9f       	mul	r25, r21
     9d6:	d1 f3       	breq	.-12     	; 0x9cc <__mulsf3+0x14>
     9d8:	95 0f       	add	r25, r21
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	55 1f       	adc	r21, r21
     9de:	62 9f       	mul	r22, r18
     9e0:	f0 01       	movw	r30, r0
     9e2:	72 9f       	mul	r23, r18
     9e4:	bb 27       	eor	r27, r27
     9e6:	f0 0d       	add	r31, r0
     9e8:	b1 1d       	adc	r27, r1
     9ea:	63 9f       	mul	r22, r19
     9ec:	aa 27       	eor	r26, r26
     9ee:	f0 0d       	add	r31, r0
     9f0:	b1 1d       	adc	r27, r1
     9f2:	aa 1f       	adc	r26, r26
     9f4:	64 9f       	mul	r22, r20
     9f6:	66 27       	eor	r22, r22
     9f8:	b0 0d       	add	r27, r0
     9fa:	a1 1d       	adc	r26, r1
     9fc:	66 1f       	adc	r22, r22
     9fe:	82 9f       	mul	r24, r18
     a00:	22 27       	eor	r18, r18
     a02:	b0 0d       	add	r27, r0
     a04:	a1 1d       	adc	r26, r1
     a06:	62 1f       	adc	r22, r18
     a08:	73 9f       	mul	r23, r19
     a0a:	b0 0d       	add	r27, r0
     a0c:	a1 1d       	adc	r26, r1
     a0e:	62 1f       	adc	r22, r18
     a10:	83 9f       	mul	r24, r19
     a12:	a0 0d       	add	r26, r0
     a14:	61 1d       	adc	r22, r1
     a16:	22 1f       	adc	r18, r18
     a18:	74 9f       	mul	r23, r20
     a1a:	33 27       	eor	r19, r19
     a1c:	a0 0d       	add	r26, r0
     a1e:	61 1d       	adc	r22, r1
     a20:	23 1f       	adc	r18, r19
     a22:	84 9f       	mul	r24, r20
     a24:	60 0d       	add	r22, r0
     a26:	21 1d       	adc	r18, r1
     a28:	82 2f       	mov	r24, r18
     a2a:	76 2f       	mov	r23, r22
     a2c:	6a 2f       	mov	r22, r26
     a2e:	11 24       	eor	r1, r1
     a30:	9f 57       	subi	r25, 0x7F	; 127
     a32:	50 40       	sbci	r21, 0x00	; 0
     a34:	8a f0       	brmi	.+34     	; 0xa58 <__mulsf3_pse+0x84>
     a36:	e1 f0       	breq	.+56     	; 0xa70 <__mulsf3_pse+0x9c>
     a38:	88 23       	and	r24, r24
     a3a:	4a f0       	brmi	.+18     	; 0xa4e <__mulsf3_pse+0x7a>
     a3c:	ee 0f       	add	r30, r30
     a3e:	ff 1f       	adc	r31, r31
     a40:	bb 1f       	adc	r27, r27
     a42:	66 1f       	adc	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	88 1f       	adc	r24, r24
     a48:	91 50       	subi	r25, 0x01	; 1
     a4a:	50 40       	sbci	r21, 0x00	; 0
     a4c:	a9 f7       	brne	.-22     	; 0xa38 <__mulsf3_pse+0x64>
     a4e:	9e 3f       	cpi	r25, 0xFE	; 254
     a50:	51 05       	cpc	r21, r1
     a52:	70 f0       	brcs	.+28     	; 0xa70 <__mulsf3_pse+0x9c>
     a54:	1b cf       	rjmp	.-458    	; 0x88c <__fp_inf>
     a56:	65 cf       	rjmp	.-310    	; 0x922 <__fp_szero>
     a58:	5f 3f       	cpi	r21, 0xFF	; 255
     a5a:	ec f3       	brlt	.-6      	; 0xa56 <__mulsf3_pse+0x82>
     a5c:	98 3e       	cpi	r25, 0xE8	; 232
     a5e:	dc f3       	brlt	.-10     	; 0xa56 <__mulsf3_pse+0x82>
     a60:	86 95       	lsr	r24
     a62:	77 95       	ror	r23
     a64:	67 95       	ror	r22
     a66:	b7 95       	ror	r27
     a68:	f7 95       	ror	r31
     a6a:	e7 95       	ror	r30
     a6c:	9f 5f       	subi	r25, 0xFF	; 255
     a6e:	c1 f7       	brne	.-16     	; 0xa60 <__mulsf3_pse+0x8c>
     a70:	fe 2b       	or	r31, r30
     a72:	88 0f       	add	r24, r24
     a74:	91 1d       	adc	r25, r1
     a76:	96 95       	lsr	r25
     a78:	87 95       	ror	r24
     a7a:	97 f9       	bld	r25, 7
     a7c:	08 95       	ret

00000a7e <__fp_mpack>:
     a7e:	9f 3f       	cpi	r25, 0xFF	; 255
     a80:	31 f0       	breq	.+12     	; 0xa8e <__fp_mpack_finite+0xc>

00000a82 <__fp_mpack_finite>:
     a82:	91 50       	subi	r25, 0x01	; 1
     a84:	20 f4       	brcc	.+8      	; 0xa8e <__fp_mpack_finite+0xc>
     a86:	87 95       	ror	r24
     a88:	77 95       	ror	r23
     a8a:	67 95       	ror	r22
     a8c:	b7 95       	ror	r27
     a8e:	88 0f       	add	r24, r24
     a90:	91 1d       	adc	r25, r1
     a92:	96 95       	lsr	r25
     a94:	87 95       	ror	r24
     a96:	97 f9       	bld	r25, 7
     a98:	08 95       	ret

00000a9a <__fp_powser>:
     a9a:	df 93       	push	r29
     a9c:	cf 93       	push	r28
     a9e:	1f 93       	push	r17
     aa0:	0f 93       	push	r16
     aa2:	ff 92       	push	r15
     aa4:	ef 92       	push	r14
     aa6:	df 92       	push	r13
     aa8:	7b 01       	movw	r14, r22
     aaa:	8c 01       	movw	r16, r24
     aac:	68 94       	set
     aae:	05 c0       	rjmp	.+10     	; 0xaba <__fp_powser+0x20>
     ab0:	da 2e       	mov	r13, r26
     ab2:	ef 01       	movw	r28, r30
     ab4:	8d df       	rcall	.-230    	; 0x9d0 <__mulsf3x>
     ab6:	fe 01       	movw	r30, r28
     ab8:	e8 94       	clt
     aba:	a5 91       	lpm	r26, Z+
     abc:	25 91       	lpm	r18, Z+
     abe:	35 91       	lpm	r19, Z+
     ac0:	45 91       	lpm	r20, Z+
     ac2:	55 91       	lpm	r21, Z+
     ac4:	ae f3       	brts	.-22     	; 0xab0 <__fp_powser+0x16>
     ac6:	ef 01       	movw	r28, r30
     ac8:	e9 dd       	rcall	.-1070   	; 0x69c <__addsf3x>
     aca:	fe 01       	movw	r30, r28
     acc:	97 01       	movw	r18, r14
     ace:	a8 01       	movw	r20, r16
     ad0:	da 94       	dec	r13
     ad2:	79 f7       	brne	.-34     	; 0xab2 <__fp_powser+0x18>
     ad4:	df 90       	pop	r13
     ad6:	ef 90       	pop	r14
     ad8:	ff 90       	pop	r15
     ada:	0f 91       	pop	r16
     adc:	1f 91       	pop	r17
     ade:	cf 91       	pop	r28
     ae0:	df 91       	pop	r29
     ae2:	08 95       	ret

00000ae4 <ColumnScan>:
/// Col1 - Col4 goes low one after each other.
/** The columnCounter counts 1, 2, 3 and 4 and stores values static between each call. */
void ColumnScan()
{
	static int counter = 1;
	PORTC = 0b11111111;
     ae4:	8f ef       	ldi	r24, 0xFF	; 255
     ae6:	88 b9       	out	0x08, r24	; 8
	
	switch (counter)
     ae8:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <counter.1745>
     aec:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <counter.1745+0x1>
     af0:	82 30       	cpi	r24, 0x02	; 2
     af2:	91 05       	cpc	r25, r1
     af4:	b1 f0       	breq	.+44     	; 0xb22 <ColumnScan+0x3e>
     af6:	1c f4       	brge	.+6      	; 0xafe <ColumnScan+0x1a>
     af8:	01 97       	sbiw	r24, 0x01	; 1
     afa:	39 f0       	breq	.+14     	; 0xb0a <ColumnScan+0x26>
     afc:	36 c0       	rjmp	.+108    	; 0xb6a <ColumnScan+0x86>
     afe:	83 30       	cpi	r24, 0x03	; 3
     b00:	91 05       	cpc	r25, r1
     b02:	d9 f0       	breq	.+54     	; 0xb3a <ColumnScan+0x56>
     b04:	04 97       	sbiw	r24, 0x04	; 4
     b06:	29 f1       	breq	.+74     	; 0xb52 <ColumnScan+0x6e>
     b08:	30 c0       	rjmp	.+96     	; 0xb6a <ColumnScan+0x86>
	{
		case 1:
		PORTC = 0b11111110;
     b0a:	8e ef       	ldi	r24, 0xFE	; 254
     b0c:	88 b9       	out	0x08, r24	; 8
		//_delay_ms(100);
		counter++;
     b0e:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <counter.1745>
     b12:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <counter.1745+0x1>
     b16:	01 96       	adiw	r24, 0x01	; 1
     b18:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <counter.1745+0x1>
     b1c:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <counter.1745>
		break;
     b20:	08 95       	ret
		case 2:
		PORTC = 0b11111101;
     b22:	8d ef       	ldi	r24, 0xFD	; 253
     b24:	88 b9       	out	0x08, r24	; 8
		//_delay_ms(100);
		counter++;
     b26:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <counter.1745>
     b2a:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <counter.1745+0x1>
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <counter.1745+0x1>
     b34:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <counter.1745>
		break;
     b38:	08 95       	ret
		case 3:
		PORTC = 0b11111011;
     b3a:	8b ef       	ldi	r24, 0xFB	; 251
     b3c:	88 b9       	out	0x08, r24	; 8
		//_delay_ms(100);
		counter++;
     b3e:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <counter.1745>
     b42:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <counter.1745+0x1>
     b46:	01 96       	adiw	r24, 0x01	; 1
     b48:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <counter.1745+0x1>
     b4c:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <counter.1745>
		break;
     b50:	08 95       	ret
		case 4:
		PORTC = 0b11110111;
     b52:	87 ef       	ldi	r24, 0xF7	; 247
     b54:	88 b9       	out	0x08, r24	; 8
		//_delay_ms(100);
		counter++;
     b56:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <counter.1745>
     b5a:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <counter.1745+0x1>
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <counter.1745+0x1>
     b64:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <counter.1745>
		break;
     b68:	08 95       	ret
		default:
		counter = 1;
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <counter.1745+0x1>
     b72:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <counter.1745>
     b76:	08 95       	ret

00000b78 <ReadRows>:
/// Read rows to check if one goes low(0) when clicked.
/** If a key is pressed the corresponding row of the current column scanned, goes low and the key pressed is returned. */
int ReadRows()
{
	int keypressed;
	unsigned char pinC = PINC;
     b78:	26 b1       	in	r18, 0x06	; 6
	//printf("%d", pinL);
	if (~pinC & 0xF0) // check if clicked on keypad
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	a9 01       	movw	r20, r18
     b7e:	40 95       	com	r20
     b80:	50 95       	com	r21
     b82:	40 7f       	andi	r20, 0xF0	; 240
     b84:	55 27       	eor	r21, r21
     b86:	45 2b       	or	r20, r21
     b88:	59 f0       	breq	.+22     	; 0xba0 <ReadRows+0x28>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b8a:	4f ef       	ldi	r20, 0xFF	; 255
     b8c:	81 ee       	ldi	r24, 0xE1	; 225
     b8e:	94 e0       	ldi	r25, 0x04	; 4
     b90:	41 50       	subi	r20, 0x01	; 1
     b92:	80 40       	sbci	r24, 0x00	; 0
     b94:	90 40       	sbci	r25, 0x00	; 0
     b96:	e1 f7       	brne	.-8      	; 0xb90 <ReadRows+0x18>
     b98:	00 c0       	rjmp	.+0      	; 0xb9a <ReadRows+0x22>
     b9a:	00 00       	nop
	{
		_delay_ms(100);
		keypressed = pinC;
     b9c:	82 2f       	mov	r24, r18
     b9e:	93 2f       	mov	r25, r19
	}
	
	return keypressed;
}
     ba0:	08 95       	ret

00000ba2 <DecodeKeyBoard>:

/// Decode which key is pressed and do the right menu function.
void DecodeKeyBoard(int keypressed)
{
	char charKeyPressed;
	switch (keypressed)
     ba2:	8e 3d       	cpi	r24, 0xDE	; 222
     ba4:	91 05       	cpc	r25, r1
     ba6:	09 f4       	brne	.+2      	; 0xbaa <DecodeKeyBoard+0x8>
     ba8:	68 c0       	rjmp	.+208    	; 0xc7a <DecodeKeyBoard+0xd8>
     baa:	6c f4       	brge	.+26     	; 0xbc6 <DecodeKeyBoard+0x24>
     bac:	8d 37       	cpi	r24, 0x7D	; 125
     bae:	91 05       	cpc	r25, r1
     bb0:	09 f4       	brne	.+2      	; 0xbb4 <DecodeKeyBoard+0x12>
     bb2:	7a c0       	rjmp	.+244    	; 0xca8 <DecodeKeyBoard+0x106>
     bb4:	8b 3b       	cpi	r24, 0xBB	; 187
     bb6:	91 05       	cpc	r25, r1
     bb8:	09 f4       	brne	.+2      	; 0xbbc <DecodeKeyBoard+0x1a>
     bba:	96 c0       	rjmp	.+300    	; 0xce8 <DecodeKeyBoard+0x146>
     bbc:	8b 37       	cpi	r24, 0x7B	; 123
     bbe:	91 05       	cpc	r25, r1
     bc0:	09 f0       	breq	.+2      	; 0xbc4 <DecodeKeyBoard+0x22>
     bc2:	aa c0       	rjmp	.+340    	; 0xd18 <DecodeKeyBoard+0x176>
     bc4:	a3 c0       	rjmp	.+326    	; 0xd0c <DecodeKeyBoard+0x16a>
     bc6:	8d 3e       	cpi	r24, 0xED	; 237
     bc8:	91 05       	cpc	r25, r1
     bca:	21 f1       	breq	.+72     	; 0xc14 <DecodeKeyBoard+0x72>
     bcc:	8e 3e       	cpi	r24, 0xEE	; 238
     bce:	91 05       	cpc	r25, r1
     bd0:	29 f0       	breq	.+10     	; 0xbdc <DecodeKeyBoard+0x3a>
     bd2:	8b 3e       	cpi	r24, 0xEB	; 235
     bd4:	91 05       	cpc	r25, r1
     bd6:	09 f0       	breq	.+2      	; 0xbda <DecodeKeyBoard+0x38>
     bd8:	9f c0       	rjmp	.+318    	; 0xd18 <DecodeKeyBoard+0x176>
     bda:	38 c0       	rjmp	.+112    	; 0xc4c <DecodeKeyBoard+0xaa>
	{
		case 0b11101110:						// or 0xEE, Keypad 1
			printf("1");
     bdc:	81 e3       	ldi	r24, 0x31	; 49
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	52 d1       	rcall	.+676    	; 0xe86 <putchar>
			if (currentMenu == '0')				// Main Menu
     be2:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     be6:	80 33       	cpi	r24, 0x30	; 48
     be8:	19 f4       	brne	.+6      	; 0xbf0 <DecodeKeyBoard+0x4e>
			{
				Menu('2');						// Goto: Light Control Menu Part 1
     bea:	82 e3       	ldi	r24, 0x32	; 50
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	a7 dc       	rcall	.-1714   	; 0x53e <Menu>
			}
			if (currentMenu == '2')				// Light Control Menu Part 1
     bf0:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     bf4:	82 33       	cpi	r24, 0x32	; 50
			{
				RGBTurnOn();
     bf6:	09 f4       	brne	.+2      	; 0xbfa <DecodeKeyBoard+0x58>
     bf8:	e5 d0       	rcall	.+458    	; 0xdc4 <RGBTurnOn>
			}
			if (currentMenu == '4')				// Light Color Menu
     bfa:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     bfe:	84 33       	cpi	r24, 0x34	; 52
     c00:	09 f0       	breq	.+2      	; 0xc04 <DecodeKeyBoard+0x62>
     c02:	8a c0       	rjmp	.+276    	; 0xd18 <DecodeKeyBoard+0x176>
			{
				RGBChangeColor(255,255,255);	// White
     c04:	4f ef       	ldi	r20, 0xFF	; 255
     c06:	50 e0       	ldi	r21, 0x00	; 0
     c08:	6f ef       	ldi	r22, 0xFF	; 255
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	8f ef       	ldi	r24, 0xFF	; 255
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	fb c0       	rjmp	.+502    	; 0xe08 <RGBChangeColor>
			}
		break;
		case 0b11101101:						// or 0xED, Keypad 2
			printf("2");
     c12:	08 95       	ret
     c14:	82 e3       	ldi	r24, 0x32	; 50
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	36 d1       	rcall	.+620    	; 0xe86 <putchar>
			if (currentMenu == '0')				// Main Menu Part 1
     c1a:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c1e:	80 33       	cpi	r24, 0x30	; 48
			{
				Menu('5');						// Goto: Temperature Control Menu
     c20:	19 f4       	brne	.+6      	; 0xc28 <DecodeKeyBoard+0x86>
     c22:	85 e3       	ldi	r24, 0x35	; 53
     c24:	90 e0       	ldi	r25, 0x00	; 0
			}
			if (currentMenu == '2')				// Light Control Menu Part 1
     c26:	8b dc       	rcall	.-1770   	; 0x53e <Menu>
     c28:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c2c:	82 33       	cpi	r24, 0x32	; 50
			{
				RGBTurnOff();
     c2e:	09 f4       	brne	.+2      	; 0xc32 <DecodeKeyBoard+0x90>
     c30:	db d0       	rcall	.+438    	; 0xde8 <RGBTurnOff>
			}
			if (currentMenu == '4')				// Light Color Menu
     c32:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c36:	84 33       	cpi	r24, 0x34	; 52
     c38:	09 f0       	breq	.+2      	; 0xc3c <DecodeKeyBoard+0x9a>
			{
				RGBChangeColor(255,100,0);		// Yellow
     c3a:	6e c0       	rjmp	.+220    	; 0xd18 <DecodeKeyBoard+0x176>
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	64 e6       	ldi	r22, 0x64	; 100
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	8f ef       	ldi	r24, 0xFF	; 255
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	df c0       	rjmp	.+446    	; 0xe08 <RGBChangeColor>
			}
		break;
		case 0b11101011:						// or 0xEB, Keypad 3
			printf("3"); 
     c4a:	08 95       	ret
     c4c:	83 e3       	ldi	r24, 0x33	; 51
     c4e:	90 e0       	ldi	r25, 0x00	; 0
			if (currentMenu == '3')				// Light Control Menu Part 2
     c50:	1a d1       	rcall	.+564    	; 0xe86 <putchar>
     c52:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c56:	83 33       	cpi	r24, 0x33	; 51
			{
				Menu('4');						// Goto: Light Color Menu
     c58:	19 f4       	brne	.+6      	; 0xc60 <DecodeKeyBoard+0xbe>
     c5a:	84 e3       	ldi	r24, 0x34	; 52
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	6f dc       	rcall	.-1826   	; 0x53e <Menu>
			}
			if (currentMenu == '4')				// Light Color Menu
     c60:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c64:	84 33       	cpi	r24, 0x34	; 52
     c66:	09 f0       	breq	.+2      	; 0xc6a <DecodeKeyBoard+0xc8>
			{
				RGBChangeColor(0,0,255);		// Blue
     c68:	57 c0       	rjmp	.+174    	; 0xd18 <DecodeKeyBoard+0x176>
     c6a:	4f ef       	ldi	r20, 0xFF	; 255
     c6c:	50 e0       	ldi	r21, 0x00	; 0
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
			}
		break;
		case 0b11011110:						// or 0xDE, Keypad 4
			printf("4"); 
     c76:	c8 c0       	rjmp	.+400    	; 0xe08 <RGBChangeColor>
     c78:	08 95       	ret
     c7a:	84 e3       	ldi	r24, 0x34	; 52
     c7c:	90 e0       	ldi	r25, 0x00	; 0
			if (currentMenu == '0')				// Main Menu Part 1
     c7e:	03 d1       	rcall	.+518    	; 0xe86 <putchar>
     c80:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c84:	80 33       	cpi	r24, 0x30	; 48
			{
				Menu('5');						// Goto: Temperature Control Menu
     c86:	19 f4       	brne	.+6      	; 0xc8e <DecodeKeyBoard+0xec>
     c88:	85 e3       	ldi	r24, 0x35	; 53
     c8a:	90 e0       	ldi	r25, 0x00	; 0
			}
			if (currentMenu == '4')				// Light Color Menu
     c8c:	58 dc       	rcall	.-1872   	; 0x53e <Menu>
     c8e:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     c92:	84 33       	cpi	r24, 0x34	; 52
			{
				RGBChangeColor(255,0,150);
     c94:	09 f0       	breq	.+2      	; 0xc98 <DecodeKeyBoard+0xf6>
     c96:	40 c0       	rjmp	.+128    	; 0xd18 <DecodeKeyBoard+0x176>
     c98:	46 e9       	ldi	r20, 0x96	; 150
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	8f ef       	ldi	r24, 0xFF	; 255
     ca2:	90 e0       	ldi	r25, 0x00	; 0
			}
		break;
		case 0b01111101:						// or 0x7D, Keypad 0
			printf("0");
     ca4:	b1 c0       	rjmp	.+354    	; 0xe08 <RGBChangeColor>
     ca6:	08 95       	ret
     ca8:	80 e3       	ldi	r24, 0x30	; 48
			if (currentMenu == '1')				// Main Menu Part 2 
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	ec d0       	rcall	.+472    	; 0xe86 <putchar>
     cae:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
			{
				Menu('0');						// Goto: Main Menu Part 1
     cb2:	81 33       	cpi	r24, 0x31	; 49
     cb4:	19 f4       	brne	.+6      	; 0xcbc <DecodeKeyBoard+0x11a>
     cb6:	80 e3       	ldi	r24, 0x30	; 48
			}
			if (currentMenu == '2')				// Light Control Menu Part 1
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	41 dc       	rcall	.-1918   	; 0x53e <Menu>
     cbc:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
			{
				Menu('0');						// Goto: Main Menu Part 1
     cc0:	82 33       	cpi	r24, 0x32	; 50
     cc2:	19 f4       	brne	.+6      	; 0xcca <DecodeKeyBoard+0x128>
     cc4:	80 e3       	ldi	r24, 0x30	; 48
			}
			if (currentMenu == '3')				// Light Control Menu Part 2
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	3a dc       	rcall	.-1932   	; 0x53e <Menu>
     cca:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
			{
				Menu('2');						// Goto: Light Control Menu Part 1
     cce:	83 33       	cpi	r24, 0x33	; 51
     cd0:	19 f4       	brne	.+6      	; 0xcd8 <DecodeKeyBoard+0x136>
			}
			if (currentMenu == '4')				// Light Color Menu
     cd2:	82 e3       	ldi	r24, 0x32	; 50
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	33 dc       	rcall	.-1946   	; 0x53e <Menu>
     cd8:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
			{
				Menu('3');						// Goto: Light Control Menu Part 2
     cdc:	84 33       	cpi	r24, 0x34	; 52
     cde:	e1 f4       	brne	.+56     	; 0xd18 <DecodeKeyBoard+0x176>
     ce0:	83 e3       	ldi	r24, 0x33	; 51
			}
		break;
		case 0b10111011:						// Or 0xBB, Keypad 9
			printf("9");
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	2c cc       	rjmp	.-1960   	; 0x53e <Menu>
     ce6:	08 95       	ret
			if (currentMenu == '0')				// Main Menu
     ce8:	89 e3       	ldi	r24, 0x39	; 57
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	cc d0       	rcall	.+408    	; 0xe86 <putchar>
			{
				Menu('1');						// Goto: Main Menu Part 1
     cee:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
     cf2:	80 33       	cpi	r24, 0x30	; 48
     cf4:	19 f4       	brne	.+6      	; 0xcfc <DecodeKeyBoard+0x15a>
			}
			if (currentMenu == '2')				// Light Control Menu Part 1
     cf6:	81 e3       	ldi	r24, 0x31	; 49
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	21 dc       	rcall	.-1982   	; 0x53e <Menu>
     cfc:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <currentMenu>
			{
				Menu('3');						// Goto: Light Control Menu Part 2
     d00:	82 33       	cpi	r24, 0x32	; 50
     d02:	51 f4       	brne	.+20     	; 0xd18 <DecodeKeyBoard+0x176>
     d04:	83 e3       	ldi	r24, 0x33	; 51
     d06:	90 e0       	ldi	r25, 0x00	; 0
			}
		break;
		case 0b01111011:						// Or 0x7B, Keypad #
			printf("#");
     d08:	1a cc       	rjmp	.-1996   	; 0x53e <Menu>
     d0a:	08 95       	ret
     d0c:	83 e2       	ldi	r24, 0x23	; 35
     d0e:	90 e0       	ldi	r25, 0x00	; 0
			Menu('0');							// Goto: Main Menu Part 1
     d10:	ba d0       	rcall	.+372    	; 0xe86 <putchar>
     d12:	80 e3       	ldi	r24, 0x30	; 48
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	13 cc       	rjmp	.-2010   	; 0x53e <Menu>
     d18:	08 95       	ret

00000d1a <Init>:

/// Initialize ports.
/** Set output ports and enable pull-ups */
void Init(void)
{
	DDRC |= (1<<PC0) | (1<<PC1) | (1<<PC2) | (1<<PC3); // Set output ports
     d1a:	87 b1       	in	r24, 0x07	; 7
     d1c:	8f 60       	ori	r24, 0x0F	; 15
     d1e:	87 b9       	out	0x07, r24	; 7
	PORTC = (1<<PC4) | (1<<PC5) | (1<<PC6) | (1<<PC7); // Enable Pull-up
     d20:	80 ef       	ldi	r24, 0xF0	; 240
     d22:	88 b9       	out	0x08, r24	; 8
     d24:	08 95       	ret

00000d26 <__vector_17>:
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER1_COMPA_vect)
{
     d26:	1f 92       	push	r1
     d28:	0f 92       	push	r0
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	0f 92       	push	r0
     d2e:	11 24       	eor	r1, r1
     d30:	0b b6       	in	r0, 0x3b	; 59
     d32:	0f 92       	push	r0
     d34:	2f 93       	push	r18
     d36:	3f 93       	push	r19
     d38:	4f 93       	push	r20
     d3a:	5f 93       	push	r21
     d3c:	6f 93       	push	r22
     d3e:	7f 93       	push	r23
     d40:	8f 93       	push	r24
     d42:	9f 93       	push	r25
     d44:	af 93       	push	r26
     d46:	bf 93       	push	r27
     d48:	ef 93       	push	r30
     d4a:	ff 93       	push	r31
	ColumnScan();
     d4c:	cb de       	rcall	.-618    	; 0xae4 <ColumnScan>
}
     d4e:	ff 91       	pop	r31
     d50:	ef 91       	pop	r30
     d52:	bf 91       	pop	r27
     d54:	af 91       	pop	r26
     d56:	9f 91       	pop	r25
     d58:	8f 91       	pop	r24
     d5a:	7f 91       	pop	r23
     d5c:	6f 91       	pop	r22
     d5e:	5f 91       	pop	r21
     d60:	4f 91       	pop	r20
     d62:	3f 91       	pop	r19
     d64:	2f 91       	pop	r18
     d66:	0f 90       	pop	r0
     d68:	0b be       	out	0x3b, r0	; 59
     d6a:	0f 90       	pop	r0
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	0f 90       	pop	r0
     d70:	1f 90       	pop	r1
     d72:	18 95       	reti

00000d74 <timer1Init>:

void timer1Init()
{
		TCCR1B |= (1<<WGM12) | (1<<CS12);
     d74:	e1 e8       	ldi	r30, 0x81	; 129
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	80 81       	ld	r24, Z
     d7a:	8c 60       	ori	r24, 0x0C	; 12
     d7c:	80 83       	st	Z, r24
		TIMSK1 |= (1<<OCIE1A);
     d7e:	ef e6       	ldi	r30, 0x6F	; 111
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	80 81       	ld	r24, Z
     d84:	82 60       	ori	r24, 0x02	; 2
     d86:	80 83       	st	Z, r24
		
		OCR1A = 3124;
     d88:	84 e3       	ldi	r24, 0x34	; 52
     d8a:	9c e0       	ldi	r25, 0x0C	; 12
     d8c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     d90:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     d94:	08 95       	ret

00000d96 <RGBTimer3Init>:

void RGBTimer3Init()
{
	
	// Compare Output Mode: Fast PWM Mode: Clear OCnA/OCnB/OCnC on compare match, set OCnA/OCnB/OCnC at BOTTOM (non-inverting mode) (Table 17-4)
	TCCR3A |= (1<<COM3B1);
     d96:	e0 e9       	ldi	r30, 0x90	; 144
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	80 81       	ld	r24, Z
     d9c:	80 62       	ori	r24, 0x20	; 32
     d9e:	80 83       	st	Z, r24
	TCCR3A |= (1<<COM3A1);
     da0:	80 81       	ld	r24, Z
     da2:	80 68       	ori	r24, 0x80	; 128
     da4:	80 83       	st	Z, r24
	TCCR3A |= (1<<COM3C1);				// datasheet 17.11.1
     da6:	80 81       	ld	r24, Z
     da8:	88 60       	ori	r24, 0x08	; 8
     daa:	80 83       	st	Z, r24
	
	//Waveform Generation Mode: Mode 5 Fast PWM 8 bit: WGM30 = 1, WGM32 = 1 (Table 17-2)
	TCCR3A |= (1<<WGM30);
     dac:	80 81       	ld	r24, Z
     dae:	81 60       	ori	r24, 0x01	; 1
     db0:	80 83       	st	Z, r24
	TCCR3B |= (1<<WGM32);
     db2:	e1 e9       	ldi	r30, 0x91	; 145
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	80 81       	ld	r24, Z
     db8:	88 60       	ori	r24, 0x08	; 8
     dba:	80 83       	st	Z, r24
	
	// Clock Select Bit: clk/64 prescaling: CS = 011 : CS31 = 1, CS30 = 1 (Table 17-6), frekv. = 980Hz
	TCCR3B |= (1<<CS31) | (1<<CS30);		// datasheet 17.11.6
     dbc:	80 81       	ld	r24, Z
     dbe:	83 60       	ori	r24, 0x03	; 3
     dc0:	80 83       	st	Z, r24
     dc2:	08 95       	ret

00000dc4 <RGBTurnOn>:
}

void RGBTurnOn()
{
	// Set output to OC3A = PE3, OC3B = PE4, OC3C = PE5, Arduino MEGA pin configuration: (#5), (#2), (#3)
	DDRE |= (1<<PE3) | (1<<PE4) | (1<<PE5);
     dc4:	8d b1       	in	r24, 0x0d	; 13
     dc6:	88 63       	ori	r24, 0x38	; 56
     dc8:	8d b9       	out	0x0d, r24	; 13
	printf("%d",DDRE);
}

void RGBChangeColor(int red, int green, int blue)
{
		OCR3A = red;		// Red, 100% fixed dutycycle, Output Compare Register 3 A, datasheet 17.11.20
     dca:	8f ef       	ldi	r24, 0xFF	; 255
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     dd2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
		OCR3B = green;		// Green, 0% fixed dutycycle, Output Compare Register 3 B, datasheet 17.11.21
     dd6:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     dda:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
		OCR3C = blue;		// Blue, 50% fixed dutycycle, Output Compare Register 3 C, datasheet 17.11.22
     dde:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     de2:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
     de6:	08 95       	ret

00000de8 <RGBTurnOff>:
}

void RGBTurnOff()
{
	// Set output to OC3A = PE3, OC3B = PE4, OC3C = PE5, Arduino MEGA pin configuration: (#5), (#2), (#3)
	DDRE &= ~(1<<PE3 | 1<<PE4 | 1<<PE5);
     de8:	8d b1       	in	r24, 0x0d	; 13
     dea:	87 7c       	andi	r24, 0xC7	; 199
     dec:	8d b9       	out	0x0d, r24	; 13
	printf("%d",DDRE);
     dee:	8d b1       	in	r24, 0x0d	; 13
     df0:	1f 92       	push	r1
     df2:	8f 93       	push	r24
     df4:	8f e8       	ldi	r24, 0x8F	; 143
     df6:	92 e0       	ldi	r25, 0x02	; 2
     df8:	9f 93       	push	r25
     dfa:	8f 93       	push	r24
     dfc:	31 d0       	rcall	.+98     	; 0xe60 <printf>
}
     dfe:	0f 90       	pop	r0
     e00:	0f 90       	pop	r0
     e02:	0f 90       	pop	r0
     e04:	0f 90       	pop	r0
     e06:	08 95       	ret

00000e08 <RGBChangeColor>:

void RGBChangeColor(int red, int green, int blue)
{
		OCR3A = red;		// Red, 100% fixed dutycycle, Output Compare Register 3 A, datasheet 17.11.20
     e08:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     e0c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
		OCR3B = green;		// Green, 0% fixed dutycycle, Output Compare Register 3 B, datasheet 17.11.21
     e10:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     e14:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
		OCR3C = blue;		// Blue, 50% fixed dutycycle, Output Compare Register 3 C, datasheet 17.11.22
     e18:	50 93 9d 00 	sts	0x009D, r21	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     e1c:	40 93 9c 00 	sts	0x009C, r20	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
     e20:	08 95       	ret

00000e22 <dtostrf>:
     e22:	ef 92       	push	r14
     e24:	0f 93       	push	r16
     e26:	1f 93       	push	r17
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	e8 01       	movw	r28, r16
     e2e:	47 fd       	sbrc	r20, 7
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <dtostrf+0x14>
     e32:	34 e0       	ldi	r19, 0x04	; 4
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <dtostrf+0x16>
     e36:	34 e1       	ldi	r19, 0x14	; 20
     e38:	04 2e       	mov	r0, r20
     e3a:	00 0c       	add	r0, r0
     e3c:	55 0b       	sbc	r21, r21
     e3e:	57 ff       	sbrs	r21, 7
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <dtostrf+0x26>
     e42:	51 95       	neg	r21
     e44:	41 95       	neg	r20
     e46:	51 09       	sbc	r21, r1
     e48:	e3 2e       	mov	r14, r19
     e4a:	02 2f       	mov	r16, r18
     e4c:	24 2f       	mov	r18, r20
     e4e:	ae 01       	movw	r20, r28
     e50:	1c d2       	rcall	.+1080   	; 0x128a <dtoa_prf>
     e52:	ce 01       	movw	r24, r28
     e54:	df 91       	pop	r29
     e56:	cf 91       	pop	r28
     e58:	1f 91       	pop	r17
     e5a:	0f 91       	pop	r16
     e5c:	ef 90       	pop	r14
     e5e:	08 95       	ret

00000e60 <printf>:
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	cd b7       	in	r28, 0x3d	; 61
     e66:	de b7       	in	r29, 0x3e	; 62
     e68:	ae 01       	movw	r20, r28
     e6a:	4a 5f       	subi	r20, 0xFA	; 250
     e6c:	5f 4f       	sbci	r21, 0xFF	; 255
     e6e:	fa 01       	movw	r30, r20
     e70:	61 91       	ld	r22, Z+
     e72:	71 91       	ld	r23, Z+
     e74:	af 01       	movw	r20, r30
     e76:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end+0x2>
     e7a:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x3>
     e7e:	08 d0       	rcall	.+16     	; 0xe90 <vfprintf>
     e80:	df 91       	pop	r29
     e82:	cf 91       	pop	r28
     e84:	08 95       	ret

00000e86 <putchar>:
     e86:	60 91 94 02 	lds	r22, 0x0294	; 0x800294 <__data_end+0x2>
     e8a:	70 91 95 02 	lds	r23, 0x0295	; 0x800295 <__data_end+0x3>
     e8e:	61 c4       	rjmp	.+2242   	; 0x1752 <fputc>

00000e90 <vfprintf>:
     e90:	2f 92       	push	r2
     e92:	3f 92       	push	r3
     e94:	4f 92       	push	r4
     e96:	5f 92       	push	r5
     e98:	6f 92       	push	r6
     e9a:	7f 92       	push	r7
     e9c:	8f 92       	push	r8
     e9e:	9f 92       	push	r9
     ea0:	af 92       	push	r10
     ea2:	bf 92       	push	r11
     ea4:	cf 92       	push	r12
     ea6:	df 92       	push	r13
     ea8:	ef 92       	push	r14
     eaa:	ff 92       	push	r15
     eac:	0f 93       	push	r16
     eae:	1f 93       	push	r17
     eb0:	cf 93       	push	r28
     eb2:	df 93       	push	r29
     eb4:	cd b7       	in	r28, 0x3d	; 61
     eb6:	de b7       	in	r29, 0x3e	; 62
     eb8:	2b 97       	sbiw	r28, 0x0b	; 11
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	f8 94       	cli
     ebe:	de bf       	out	0x3e, r29	; 62
     ec0:	0f be       	out	0x3f, r0	; 63
     ec2:	cd bf       	out	0x3d, r28	; 61
     ec4:	6c 01       	movw	r12, r24
     ec6:	7b 01       	movw	r14, r22
     ec8:	8a 01       	movw	r16, r20
     eca:	fc 01       	movw	r30, r24
     ecc:	17 82       	std	Z+7, r1	; 0x07
     ece:	16 82       	std	Z+6, r1	; 0x06
     ed0:	83 81       	ldd	r24, Z+3	; 0x03
     ed2:	81 ff       	sbrs	r24, 1
     ed4:	bf c1       	rjmp	.+894    	; 0x1254 <vfprintf+0x3c4>
     ed6:	ce 01       	movw	r24, r28
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	3c 01       	movw	r6, r24
     edc:	f6 01       	movw	r30, r12
     ede:	93 81       	ldd	r25, Z+3	; 0x03
     ee0:	f7 01       	movw	r30, r14
     ee2:	93 fd       	sbrc	r25, 3
     ee4:	85 91       	lpm	r24, Z+
     ee6:	93 ff       	sbrs	r25, 3
     ee8:	81 91       	ld	r24, Z+
     eea:	7f 01       	movw	r14, r30
     eec:	88 23       	and	r24, r24
     eee:	09 f4       	brne	.+2      	; 0xef2 <vfprintf+0x62>
     ef0:	ad c1       	rjmp	.+858    	; 0x124c <vfprintf+0x3bc>
     ef2:	85 32       	cpi	r24, 0x25	; 37
     ef4:	39 f4       	brne	.+14     	; 0xf04 <vfprintf+0x74>
     ef6:	93 fd       	sbrc	r25, 3
     ef8:	85 91       	lpm	r24, Z+
     efa:	93 ff       	sbrs	r25, 3
     efc:	81 91       	ld	r24, Z+
     efe:	7f 01       	movw	r14, r30
     f00:	85 32       	cpi	r24, 0x25	; 37
     f02:	21 f4       	brne	.+8      	; 0xf0c <vfprintf+0x7c>
     f04:	b6 01       	movw	r22, r12
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	24 d4       	rcall	.+2120   	; 0x1752 <fputc>
     f0a:	e8 cf       	rjmp	.-48     	; 0xedc <vfprintf+0x4c>
     f0c:	91 2c       	mov	r9, r1
     f0e:	21 2c       	mov	r2, r1
     f10:	31 2c       	mov	r3, r1
     f12:	ff e1       	ldi	r31, 0x1F	; 31
     f14:	f3 15       	cp	r31, r3
     f16:	d8 f0       	brcs	.+54     	; 0xf4e <vfprintf+0xbe>
     f18:	8b 32       	cpi	r24, 0x2B	; 43
     f1a:	79 f0       	breq	.+30     	; 0xf3a <vfprintf+0xaa>
     f1c:	38 f4       	brcc	.+14     	; 0xf2c <vfprintf+0x9c>
     f1e:	80 32       	cpi	r24, 0x20	; 32
     f20:	79 f0       	breq	.+30     	; 0xf40 <vfprintf+0xb0>
     f22:	83 32       	cpi	r24, 0x23	; 35
     f24:	a1 f4       	brne	.+40     	; 0xf4e <vfprintf+0xbe>
     f26:	23 2d       	mov	r18, r3
     f28:	20 61       	ori	r18, 0x10	; 16
     f2a:	1d c0       	rjmp	.+58     	; 0xf66 <vfprintf+0xd6>
     f2c:	8d 32       	cpi	r24, 0x2D	; 45
     f2e:	61 f0       	breq	.+24     	; 0xf48 <vfprintf+0xb8>
     f30:	80 33       	cpi	r24, 0x30	; 48
     f32:	69 f4       	brne	.+26     	; 0xf4e <vfprintf+0xbe>
     f34:	23 2d       	mov	r18, r3
     f36:	21 60       	ori	r18, 0x01	; 1
     f38:	16 c0       	rjmp	.+44     	; 0xf66 <vfprintf+0xd6>
     f3a:	83 2d       	mov	r24, r3
     f3c:	82 60       	ori	r24, 0x02	; 2
     f3e:	38 2e       	mov	r3, r24
     f40:	e3 2d       	mov	r30, r3
     f42:	e4 60       	ori	r30, 0x04	; 4
     f44:	3e 2e       	mov	r3, r30
     f46:	2a c0       	rjmp	.+84     	; 0xf9c <vfprintf+0x10c>
     f48:	f3 2d       	mov	r31, r3
     f4a:	f8 60       	ori	r31, 0x08	; 8
     f4c:	1d c0       	rjmp	.+58     	; 0xf88 <vfprintf+0xf8>
     f4e:	37 fc       	sbrc	r3, 7
     f50:	2d c0       	rjmp	.+90     	; 0xfac <vfprintf+0x11c>
     f52:	20 ed       	ldi	r18, 0xD0	; 208
     f54:	28 0f       	add	r18, r24
     f56:	2a 30       	cpi	r18, 0x0A	; 10
     f58:	40 f0       	brcs	.+16     	; 0xf6a <vfprintf+0xda>
     f5a:	8e 32       	cpi	r24, 0x2E	; 46
     f5c:	b9 f4       	brne	.+46     	; 0xf8c <vfprintf+0xfc>
     f5e:	36 fc       	sbrc	r3, 6
     f60:	75 c1       	rjmp	.+746    	; 0x124c <vfprintf+0x3bc>
     f62:	23 2d       	mov	r18, r3
     f64:	20 64       	ori	r18, 0x40	; 64
     f66:	32 2e       	mov	r3, r18
     f68:	19 c0       	rjmp	.+50     	; 0xf9c <vfprintf+0x10c>
     f6a:	36 fe       	sbrs	r3, 6
     f6c:	06 c0       	rjmp	.+12     	; 0xf7a <vfprintf+0xea>
     f6e:	8a e0       	ldi	r24, 0x0A	; 10
     f70:	98 9e       	mul	r9, r24
     f72:	20 0d       	add	r18, r0
     f74:	11 24       	eor	r1, r1
     f76:	92 2e       	mov	r9, r18
     f78:	11 c0       	rjmp	.+34     	; 0xf9c <vfprintf+0x10c>
     f7a:	ea e0       	ldi	r30, 0x0A	; 10
     f7c:	2e 9e       	mul	r2, r30
     f7e:	20 0d       	add	r18, r0
     f80:	11 24       	eor	r1, r1
     f82:	22 2e       	mov	r2, r18
     f84:	f3 2d       	mov	r31, r3
     f86:	f0 62       	ori	r31, 0x20	; 32
     f88:	3f 2e       	mov	r3, r31
     f8a:	08 c0       	rjmp	.+16     	; 0xf9c <vfprintf+0x10c>
     f8c:	8c 36       	cpi	r24, 0x6C	; 108
     f8e:	21 f4       	brne	.+8      	; 0xf98 <vfprintf+0x108>
     f90:	83 2d       	mov	r24, r3
     f92:	80 68       	ori	r24, 0x80	; 128
     f94:	38 2e       	mov	r3, r24
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <vfprintf+0x10c>
     f98:	88 36       	cpi	r24, 0x68	; 104
     f9a:	41 f4       	brne	.+16     	; 0xfac <vfprintf+0x11c>
     f9c:	f7 01       	movw	r30, r14
     f9e:	93 fd       	sbrc	r25, 3
     fa0:	85 91       	lpm	r24, Z+
     fa2:	93 ff       	sbrs	r25, 3
     fa4:	81 91       	ld	r24, Z+
     fa6:	7f 01       	movw	r14, r30
     fa8:	81 11       	cpse	r24, r1
     faa:	b3 cf       	rjmp	.-154    	; 0xf12 <vfprintf+0x82>
     fac:	98 2f       	mov	r25, r24
     fae:	9f 7d       	andi	r25, 0xDF	; 223
     fb0:	95 54       	subi	r25, 0x45	; 69
     fb2:	93 30       	cpi	r25, 0x03	; 3
     fb4:	28 f4       	brcc	.+10     	; 0xfc0 <vfprintf+0x130>
     fb6:	0c 5f       	subi	r16, 0xFC	; 252
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	9f e3       	ldi	r25, 0x3F	; 63
     fbc:	99 83       	std	Y+1, r25	; 0x01
     fbe:	0d c0       	rjmp	.+26     	; 0xfda <vfprintf+0x14a>
     fc0:	83 36       	cpi	r24, 0x63	; 99
     fc2:	31 f0       	breq	.+12     	; 0xfd0 <vfprintf+0x140>
     fc4:	83 37       	cpi	r24, 0x73	; 115
     fc6:	71 f0       	breq	.+28     	; 0xfe4 <vfprintf+0x154>
     fc8:	83 35       	cpi	r24, 0x53	; 83
     fca:	09 f0       	breq	.+2      	; 0xfce <vfprintf+0x13e>
     fcc:	55 c0       	rjmp	.+170    	; 0x1078 <vfprintf+0x1e8>
     fce:	20 c0       	rjmp	.+64     	; 0x1010 <vfprintf+0x180>
     fd0:	f8 01       	movw	r30, r16
     fd2:	80 81       	ld	r24, Z
     fd4:	89 83       	std	Y+1, r24	; 0x01
     fd6:	0e 5f       	subi	r16, 0xFE	; 254
     fd8:	1f 4f       	sbci	r17, 0xFF	; 255
     fda:	88 24       	eor	r8, r8
     fdc:	83 94       	inc	r8
     fde:	91 2c       	mov	r9, r1
     fe0:	53 01       	movw	r10, r6
     fe2:	12 c0       	rjmp	.+36     	; 0x1008 <vfprintf+0x178>
     fe4:	28 01       	movw	r4, r16
     fe6:	f2 e0       	ldi	r31, 0x02	; 2
     fe8:	4f 0e       	add	r4, r31
     fea:	51 1c       	adc	r5, r1
     fec:	f8 01       	movw	r30, r16
     fee:	a0 80       	ld	r10, Z
     ff0:	b1 80       	ldd	r11, Z+1	; 0x01
     ff2:	36 fe       	sbrs	r3, 6
     ff4:	03 c0       	rjmp	.+6      	; 0xffc <vfprintf+0x16c>
     ff6:	69 2d       	mov	r22, r9
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <vfprintf+0x170>
     ffc:	6f ef       	ldi	r22, 0xFF	; 255
     ffe:	7f ef       	ldi	r23, 0xFF	; 255
    1000:	c5 01       	movw	r24, r10
    1002:	9c d3       	rcall	.+1848   	; 0x173c <strnlen>
    1004:	4c 01       	movw	r8, r24
    1006:	82 01       	movw	r16, r4
    1008:	f3 2d       	mov	r31, r3
    100a:	ff 77       	andi	r31, 0x7F	; 127
    100c:	3f 2e       	mov	r3, r31
    100e:	15 c0       	rjmp	.+42     	; 0x103a <vfprintf+0x1aa>
    1010:	28 01       	movw	r4, r16
    1012:	22 e0       	ldi	r18, 0x02	; 2
    1014:	42 0e       	add	r4, r18
    1016:	51 1c       	adc	r5, r1
    1018:	f8 01       	movw	r30, r16
    101a:	a0 80       	ld	r10, Z
    101c:	b1 80       	ldd	r11, Z+1	; 0x01
    101e:	36 fe       	sbrs	r3, 6
    1020:	03 c0       	rjmp	.+6      	; 0x1028 <vfprintf+0x198>
    1022:	69 2d       	mov	r22, r9
    1024:	70 e0       	ldi	r23, 0x00	; 0
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x19c>
    1028:	6f ef       	ldi	r22, 0xFF	; 255
    102a:	7f ef       	ldi	r23, 0xFF	; 255
    102c:	c5 01       	movw	r24, r10
    102e:	7b d3       	rcall	.+1782   	; 0x1726 <strnlen_P>
    1030:	4c 01       	movw	r8, r24
    1032:	f3 2d       	mov	r31, r3
    1034:	f0 68       	ori	r31, 0x80	; 128
    1036:	3f 2e       	mov	r3, r31
    1038:	82 01       	movw	r16, r4
    103a:	33 fc       	sbrc	r3, 3
    103c:	19 c0       	rjmp	.+50     	; 0x1070 <vfprintf+0x1e0>
    103e:	82 2d       	mov	r24, r2
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	88 16       	cp	r8, r24
    1044:	99 06       	cpc	r9, r25
    1046:	a0 f4       	brcc	.+40     	; 0x1070 <vfprintf+0x1e0>
    1048:	b6 01       	movw	r22, r12
    104a:	80 e2       	ldi	r24, 0x20	; 32
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	81 d3       	rcall	.+1794   	; 0x1752 <fputc>
    1050:	2a 94       	dec	r2
    1052:	f5 cf       	rjmp	.-22     	; 0x103e <vfprintf+0x1ae>
    1054:	f5 01       	movw	r30, r10
    1056:	37 fc       	sbrc	r3, 7
    1058:	85 91       	lpm	r24, Z+
    105a:	37 fe       	sbrs	r3, 7
    105c:	81 91       	ld	r24, Z+
    105e:	5f 01       	movw	r10, r30
    1060:	b6 01       	movw	r22, r12
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	76 d3       	rcall	.+1772   	; 0x1752 <fputc>
    1066:	21 10       	cpse	r2, r1
    1068:	2a 94       	dec	r2
    106a:	21 e0       	ldi	r18, 0x01	; 1
    106c:	82 1a       	sub	r8, r18
    106e:	91 08       	sbc	r9, r1
    1070:	81 14       	cp	r8, r1
    1072:	91 04       	cpc	r9, r1
    1074:	79 f7       	brne	.-34     	; 0x1054 <vfprintf+0x1c4>
    1076:	e1 c0       	rjmp	.+450    	; 0x123a <vfprintf+0x3aa>
    1078:	84 36       	cpi	r24, 0x64	; 100
    107a:	11 f0       	breq	.+4      	; 0x1080 <vfprintf+0x1f0>
    107c:	89 36       	cpi	r24, 0x69	; 105
    107e:	39 f5       	brne	.+78     	; 0x10ce <vfprintf+0x23e>
    1080:	f8 01       	movw	r30, r16
    1082:	37 fe       	sbrs	r3, 7
    1084:	07 c0       	rjmp	.+14     	; 0x1094 <vfprintf+0x204>
    1086:	60 81       	ld	r22, Z
    1088:	71 81       	ldd	r23, Z+1	; 0x01
    108a:	82 81       	ldd	r24, Z+2	; 0x02
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	0c 5f       	subi	r16, 0xFC	; 252
    1090:	1f 4f       	sbci	r17, 0xFF	; 255
    1092:	08 c0       	rjmp	.+16     	; 0x10a4 <vfprintf+0x214>
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	07 2e       	mov	r0, r23
    109a:	00 0c       	add	r0, r0
    109c:	88 0b       	sbc	r24, r24
    109e:	99 0b       	sbc	r25, r25
    10a0:	0e 5f       	subi	r16, 0xFE	; 254
    10a2:	1f 4f       	sbci	r17, 0xFF	; 255
    10a4:	f3 2d       	mov	r31, r3
    10a6:	ff 76       	andi	r31, 0x6F	; 111
    10a8:	3f 2e       	mov	r3, r31
    10aa:	97 ff       	sbrs	r25, 7
    10ac:	09 c0       	rjmp	.+18     	; 0x10c0 <vfprintf+0x230>
    10ae:	90 95       	com	r25
    10b0:	80 95       	com	r24
    10b2:	70 95       	com	r23
    10b4:	61 95       	neg	r22
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ba:	9f 4f       	sbci	r25, 0xFF	; 255
    10bc:	f0 68       	ori	r31, 0x80	; 128
    10be:	3f 2e       	mov	r3, r31
    10c0:	2a e0       	ldi	r18, 0x0A	; 10
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	a3 01       	movw	r20, r6
    10c6:	81 d3       	rcall	.+1794   	; 0x17ca <__ultoa_invert>
    10c8:	88 2e       	mov	r8, r24
    10ca:	86 18       	sub	r8, r6
    10cc:	44 c0       	rjmp	.+136    	; 0x1156 <vfprintf+0x2c6>
    10ce:	85 37       	cpi	r24, 0x75	; 117
    10d0:	31 f4       	brne	.+12     	; 0x10de <vfprintf+0x24e>
    10d2:	23 2d       	mov	r18, r3
    10d4:	2f 7e       	andi	r18, 0xEF	; 239
    10d6:	b2 2e       	mov	r11, r18
    10d8:	2a e0       	ldi	r18, 0x0A	; 10
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	25 c0       	rjmp	.+74     	; 0x1128 <vfprintf+0x298>
    10de:	93 2d       	mov	r25, r3
    10e0:	99 7f       	andi	r25, 0xF9	; 249
    10e2:	b9 2e       	mov	r11, r25
    10e4:	8f 36       	cpi	r24, 0x6F	; 111
    10e6:	c1 f0       	breq	.+48     	; 0x1118 <vfprintf+0x288>
    10e8:	18 f4       	brcc	.+6      	; 0x10f0 <vfprintf+0x260>
    10ea:	88 35       	cpi	r24, 0x58	; 88
    10ec:	79 f0       	breq	.+30     	; 0x110c <vfprintf+0x27c>
    10ee:	ae c0       	rjmp	.+348    	; 0x124c <vfprintf+0x3bc>
    10f0:	80 37       	cpi	r24, 0x70	; 112
    10f2:	19 f0       	breq	.+6      	; 0x10fa <vfprintf+0x26a>
    10f4:	88 37       	cpi	r24, 0x78	; 120
    10f6:	21 f0       	breq	.+8      	; 0x1100 <vfprintf+0x270>
    10f8:	a9 c0       	rjmp	.+338    	; 0x124c <vfprintf+0x3bc>
    10fa:	e9 2f       	mov	r30, r25
    10fc:	e0 61       	ori	r30, 0x10	; 16
    10fe:	be 2e       	mov	r11, r30
    1100:	b4 fe       	sbrs	r11, 4
    1102:	0d c0       	rjmp	.+26     	; 0x111e <vfprintf+0x28e>
    1104:	fb 2d       	mov	r31, r11
    1106:	f4 60       	ori	r31, 0x04	; 4
    1108:	bf 2e       	mov	r11, r31
    110a:	09 c0       	rjmp	.+18     	; 0x111e <vfprintf+0x28e>
    110c:	34 fe       	sbrs	r3, 4
    110e:	0a c0       	rjmp	.+20     	; 0x1124 <vfprintf+0x294>
    1110:	29 2f       	mov	r18, r25
    1112:	26 60       	ori	r18, 0x06	; 6
    1114:	b2 2e       	mov	r11, r18
    1116:	06 c0       	rjmp	.+12     	; 0x1124 <vfprintf+0x294>
    1118:	28 e0       	ldi	r18, 0x08	; 8
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	05 c0       	rjmp	.+10     	; 0x1128 <vfprintf+0x298>
    111e:	20 e1       	ldi	r18, 0x10	; 16
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <vfprintf+0x298>
    1124:	20 e1       	ldi	r18, 0x10	; 16
    1126:	32 e0       	ldi	r19, 0x02	; 2
    1128:	f8 01       	movw	r30, r16
    112a:	b7 fe       	sbrs	r11, 7
    112c:	07 c0       	rjmp	.+14     	; 0x113c <vfprintf+0x2ac>
    112e:	60 81       	ld	r22, Z
    1130:	71 81       	ldd	r23, Z+1	; 0x01
    1132:	82 81       	ldd	r24, Z+2	; 0x02
    1134:	93 81       	ldd	r25, Z+3	; 0x03
    1136:	0c 5f       	subi	r16, 0xFC	; 252
    1138:	1f 4f       	sbci	r17, 0xFF	; 255
    113a:	06 c0       	rjmp	.+12     	; 0x1148 <vfprintf+0x2b8>
    113c:	60 81       	ld	r22, Z
    113e:	71 81       	ldd	r23, Z+1	; 0x01
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	0e 5f       	subi	r16, 0xFE	; 254
    1146:	1f 4f       	sbci	r17, 0xFF	; 255
    1148:	a3 01       	movw	r20, r6
    114a:	3f d3       	rcall	.+1662   	; 0x17ca <__ultoa_invert>
    114c:	88 2e       	mov	r8, r24
    114e:	86 18       	sub	r8, r6
    1150:	fb 2d       	mov	r31, r11
    1152:	ff 77       	andi	r31, 0x7F	; 127
    1154:	3f 2e       	mov	r3, r31
    1156:	36 fe       	sbrs	r3, 6
    1158:	0d c0       	rjmp	.+26     	; 0x1174 <vfprintf+0x2e4>
    115a:	23 2d       	mov	r18, r3
    115c:	2e 7f       	andi	r18, 0xFE	; 254
    115e:	a2 2e       	mov	r10, r18
    1160:	89 14       	cp	r8, r9
    1162:	58 f4       	brcc	.+22     	; 0x117a <vfprintf+0x2ea>
    1164:	34 fe       	sbrs	r3, 4
    1166:	0b c0       	rjmp	.+22     	; 0x117e <vfprintf+0x2ee>
    1168:	32 fc       	sbrc	r3, 2
    116a:	09 c0       	rjmp	.+18     	; 0x117e <vfprintf+0x2ee>
    116c:	83 2d       	mov	r24, r3
    116e:	8e 7e       	andi	r24, 0xEE	; 238
    1170:	a8 2e       	mov	r10, r24
    1172:	05 c0       	rjmp	.+10     	; 0x117e <vfprintf+0x2ee>
    1174:	b8 2c       	mov	r11, r8
    1176:	a3 2c       	mov	r10, r3
    1178:	03 c0       	rjmp	.+6      	; 0x1180 <vfprintf+0x2f0>
    117a:	b8 2c       	mov	r11, r8
    117c:	01 c0       	rjmp	.+2      	; 0x1180 <vfprintf+0x2f0>
    117e:	b9 2c       	mov	r11, r9
    1180:	a4 fe       	sbrs	r10, 4
    1182:	0f c0       	rjmp	.+30     	; 0x11a2 <vfprintf+0x312>
    1184:	fe 01       	movw	r30, r28
    1186:	e8 0d       	add	r30, r8
    1188:	f1 1d       	adc	r31, r1
    118a:	80 81       	ld	r24, Z
    118c:	80 33       	cpi	r24, 0x30	; 48
    118e:	21 f4       	brne	.+8      	; 0x1198 <vfprintf+0x308>
    1190:	9a 2d       	mov	r25, r10
    1192:	99 7e       	andi	r25, 0xE9	; 233
    1194:	a9 2e       	mov	r10, r25
    1196:	09 c0       	rjmp	.+18     	; 0x11aa <vfprintf+0x31a>
    1198:	a2 fe       	sbrs	r10, 2
    119a:	06 c0       	rjmp	.+12     	; 0x11a8 <vfprintf+0x318>
    119c:	b3 94       	inc	r11
    119e:	b3 94       	inc	r11
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <vfprintf+0x31a>
    11a2:	8a 2d       	mov	r24, r10
    11a4:	86 78       	andi	r24, 0x86	; 134
    11a6:	09 f0       	breq	.+2      	; 0x11aa <vfprintf+0x31a>
    11a8:	b3 94       	inc	r11
    11aa:	a3 fc       	sbrc	r10, 3
    11ac:	10 c0       	rjmp	.+32     	; 0x11ce <vfprintf+0x33e>
    11ae:	a0 fe       	sbrs	r10, 0
    11b0:	06 c0       	rjmp	.+12     	; 0x11be <vfprintf+0x32e>
    11b2:	b2 14       	cp	r11, r2
    11b4:	80 f4       	brcc	.+32     	; 0x11d6 <vfprintf+0x346>
    11b6:	28 0c       	add	r2, r8
    11b8:	92 2c       	mov	r9, r2
    11ba:	9b 18       	sub	r9, r11
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <vfprintf+0x348>
    11be:	b2 14       	cp	r11, r2
    11c0:	58 f4       	brcc	.+22     	; 0x11d8 <vfprintf+0x348>
    11c2:	b6 01       	movw	r22, r12
    11c4:	80 e2       	ldi	r24, 0x20	; 32
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	c4 d2       	rcall	.+1416   	; 0x1752 <fputc>
    11ca:	b3 94       	inc	r11
    11cc:	f8 cf       	rjmp	.-16     	; 0x11be <vfprintf+0x32e>
    11ce:	b2 14       	cp	r11, r2
    11d0:	18 f4       	brcc	.+6      	; 0x11d8 <vfprintf+0x348>
    11d2:	2b 18       	sub	r2, r11
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x34a>
    11d6:	98 2c       	mov	r9, r8
    11d8:	21 2c       	mov	r2, r1
    11da:	a4 fe       	sbrs	r10, 4
    11dc:	0f c0       	rjmp	.+30     	; 0x11fc <vfprintf+0x36c>
    11de:	b6 01       	movw	r22, r12
    11e0:	80 e3       	ldi	r24, 0x30	; 48
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	b6 d2       	rcall	.+1388   	; 0x1752 <fputc>
    11e6:	a2 fe       	sbrs	r10, 2
    11e8:	16 c0       	rjmp	.+44     	; 0x1216 <vfprintf+0x386>
    11ea:	a1 fc       	sbrc	r10, 1
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <vfprintf+0x364>
    11ee:	88 e7       	ldi	r24, 0x78	; 120
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <vfprintf+0x368>
    11f4:	88 e5       	ldi	r24, 0x58	; 88
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	b6 01       	movw	r22, r12
    11fa:	0c c0       	rjmp	.+24     	; 0x1214 <vfprintf+0x384>
    11fc:	8a 2d       	mov	r24, r10
    11fe:	86 78       	andi	r24, 0x86	; 134
    1200:	51 f0       	breq	.+20     	; 0x1216 <vfprintf+0x386>
    1202:	a1 fe       	sbrs	r10, 1
    1204:	02 c0       	rjmp	.+4      	; 0x120a <vfprintf+0x37a>
    1206:	8b e2       	ldi	r24, 0x2B	; 43
    1208:	01 c0       	rjmp	.+2      	; 0x120c <vfprintf+0x37c>
    120a:	80 e2       	ldi	r24, 0x20	; 32
    120c:	a7 fc       	sbrc	r10, 7
    120e:	8d e2       	ldi	r24, 0x2D	; 45
    1210:	b6 01       	movw	r22, r12
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	9e d2       	rcall	.+1340   	; 0x1752 <fputc>
    1216:	89 14       	cp	r8, r9
    1218:	30 f4       	brcc	.+12     	; 0x1226 <vfprintf+0x396>
    121a:	b6 01       	movw	r22, r12
    121c:	80 e3       	ldi	r24, 0x30	; 48
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	98 d2       	rcall	.+1328   	; 0x1752 <fputc>
    1222:	9a 94       	dec	r9
    1224:	f8 cf       	rjmp	.-16     	; 0x1216 <vfprintf+0x386>
    1226:	8a 94       	dec	r8
    1228:	f3 01       	movw	r30, r6
    122a:	e8 0d       	add	r30, r8
    122c:	f1 1d       	adc	r31, r1
    122e:	80 81       	ld	r24, Z
    1230:	b6 01       	movw	r22, r12
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	8e d2       	rcall	.+1308   	; 0x1752 <fputc>
    1236:	81 10       	cpse	r8, r1
    1238:	f6 cf       	rjmp	.-20     	; 0x1226 <vfprintf+0x396>
    123a:	22 20       	and	r2, r2
    123c:	09 f4       	brne	.+2      	; 0x1240 <vfprintf+0x3b0>
    123e:	4e ce       	rjmp	.-868    	; 0xedc <vfprintf+0x4c>
    1240:	b6 01       	movw	r22, r12
    1242:	80 e2       	ldi	r24, 0x20	; 32
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	85 d2       	rcall	.+1290   	; 0x1752 <fputc>
    1248:	2a 94       	dec	r2
    124a:	f7 cf       	rjmp	.-18     	; 0x123a <vfprintf+0x3aa>
    124c:	f6 01       	movw	r30, r12
    124e:	86 81       	ldd	r24, Z+6	; 0x06
    1250:	97 81       	ldd	r25, Z+7	; 0x07
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <vfprintf+0x3c8>
    1254:	8f ef       	ldi	r24, 0xFF	; 255
    1256:	9f ef       	ldi	r25, 0xFF	; 255
    1258:	2b 96       	adiw	r28, 0x0b	; 11
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	f8 94       	cli
    125e:	de bf       	out	0x3e, r29	; 62
    1260:	0f be       	out	0x3f, r0	; 63
    1262:	cd bf       	out	0x3d, r28	; 61
    1264:	df 91       	pop	r29
    1266:	cf 91       	pop	r28
    1268:	1f 91       	pop	r17
    126a:	0f 91       	pop	r16
    126c:	ff 90       	pop	r15
    126e:	ef 90       	pop	r14
    1270:	df 90       	pop	r13
    1272:	cf 90       	pop	r12
    1274:	bf 90       	pop	r11
    1276:	af 90       	pop	r10
    1278:	9f 90       	pop	r9
    127a:	8f 90       	pop	r8
    127c:	7f 90       	pop	r7
    127e:	6f 90       	pop	r6
    1280:	5f 90       	pop	r5
    1282:	4f 90       	pop	r4
    1284:	3f 90       	pop	r3
    1286:	2f 90       	pop	r2
    1288:	08 95       	ret

0000128a <dtoa_prf>:
    128a:	8f 92       	push	r8
    128c:	9f 92       	push	r9
    128e:	af 92       	push	r10
    1290:	bf 92       	push	r11
    1292:	cf 92       	push	r12
    1294:	df 92       	push	r13
    1296:	ef 92       	push	r14
    1298:	ff 92       	push	r15
    129a:	0f 93       	push	r16
    129c:	1f 93       	push	r17
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	29 97       	sbiw	r28, 0x09	; 9
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	f8 94       	cli
    12ac:	de bf       	out	0x3e, r29	; 62
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	cd bf       	out	0x3d, r28	; 61
    12b2:	6a 01       	movw	r12, r20
    12b4:	12 2f       	mov	r17, r18
    12b6:	b0 2e       	mov	r11, r16
    12b8:	2b e3       	ldi	r18, 0x3B	; 59
    12ba:	20 17       	cp	r18, r16
    12bc:	20 f0       	brcs	.+8      	; 0x12c6 <dtoa_prf+0x3c>
    12be:	ff 24       	eor	r15, r15
    12c0:	f3 94       	inc	r15
    12c2:	f0 0e       	add	r15, r16
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <dtoa_prf+0x40>
    12c6:	2c e3       	ldi	r18, 0x3C	; 60
    12c8:	f2 2e       	mov	r15, r18
    12ca:	0f 2d       	mov	r16, r15
    12cc:	27 e0       	ldi	r18, 0x07	; 7
    12ce:	ae 01       	movw	r20, r28
    12d0:	4f 5f       	subi	r20, 0xFF	; 255
    12d2:	5f 4f       	sbci	r21, 0xFF	; 255
    12d4:	50 d1       	rcall	.+672    	; 0x1576 <__ftoa_engine>
    12d6:	bc 01       	movw	r22, r24
    12d8:	49 81       	ldd	r20, Y+1	; 0x01
    12da:	84 2f       	mov	r24, r20
    12dc:	89 70       	andi	r24, 0x09	; 9
    12de:	81 30       	cpi	r24, 0x01	; 1
    12e0:	31 f0       	breq	.+12     	; 0x12ee <dtoa_prf+0x64>
    12e2:	e1 fc       	sbrc	r14, 1
    12e4:	06 c0       	rjmp	.+12     	; 0x12f2 <dtoa_prf+0x68>
    12e6:	e0 fe       	sbrs	r14, 0
    12e8:	06 c0       	rjmp	.+12     	; 0x12f6 <dtoa_prf+0x6c>
    12ea:	90 e2       	ldi	r25, 0x20	; 32
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <dtoa_prf+0x6e>
    12ee:	9d e2       	ldi	r25, 0x2D	; 45
    12f0:	03 c0       	rjmp	.+6      	; 0x12f8 <dtoa_prf+0x6e>
    12f2:	9b e2       	ldi	r25, 0x2B	; 43
    12f4:	01 c0       	rjmp	.+2      	; 0x12f8 <dtoa_prf+0x6e>
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	5e 2d       	mov	r21, r14
    12fa:	50 71       	andi	r21, 0x10	; 16
    12fc:	43 ff       	sbrs	r20, 3
    12fe:	3c c0       	rjmp	.+120    	; 0x1378 <dtoa_prf+0xee>
    1300:	91 11       	cpse	r25, r1
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <dtoa_prf+0x7e>
    1304:	83 e0       	ldi	r24, 0x03	; 3
    1306:	01 c0       	rjmp	.+2      	; 0x130a <dtoa_prf+0x80>
    1308:	84 e0       	ldi	r24, 0x04	; 4
    130a:	81 17       	cp	r24, r17
    130c:	18 f4       	brcc	.+6      	; 0x1314 <dtoa_prf+0x8a>
    130e:	21 2f       	mov	r18, r17
    1310:	28 1b       	sub	r18, r24
    1312:	01 c0       	rjmp	.+2      	; 0x1316 <dtoa_prf+0x8c>
    1314:	20 e0       	ldi	r18, 0x00	; 0
    1316:	51 11       	cpse	r21, r1
    1318:	0b c0       	rjmp	.+22     	; 0x1330 <dtoa_prf+0xa6>
    131a:	f6 01       	movw	r30, r12
    131c:	82 2f       	mov	r24, r18
    131e:	30 e2       	ldi	r19, 0x20	; 32
    1320:	88 23       	and	r24, r24
    1322:	19 f0       	breq	.+6      	; 0x132a <dtoa_prf+0xa0>
    1324:	31 93       	st	Z+, r19
    1326:	81 50       	subi	r24, 0x01	; 1
    1328:	fb cf       	rjmp	.-10     	; 0x1320 <dtoa_prf+0x96>
    132a:	c2 0e       	add	r12, r18
    132c:	d1 1c       	adc	r13, r1
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	99 23       	and	r25, r25
    1332:	29 f0       	breq	.+10     	; 0x133e <dtoa_prf+0xb4>
    1334:	d6 01       	movw	r26, r12
    1336:	9c 93       	st	X, r25
    1338:	f6 01       	movw	r30, r12
    133a:	31 96       	adiw	r30, 0x01	; 1
    133c:	6f 01       	movw	r12, r30
    133e:	c6 01       	movw	r24, r12
    1340:	03 96       	adiw	r24, 0x03	; 3
    1342:	e2 fe       	sbrs	r14, 2
    1344:	0a c0       	rjmp	.+20     	; 0x135a <dtoa_prf+0xd0>
    1346:	3e e4       	ldi	r19, 0x4E	; 78
    1348:	d6 01       	movw	r26, r12
    134a:	3c 93       	st	X, r19
    134c:	41 e4       	ldi	r20, 0x41	; 65
    134e:	11 96       	adiw	r26, 0x01	; 1
    1350:	4c 93       	st	X, r20
    1352:	11 97       	sbiw	r26, 0x01	; 1
    1354:	12 96       	adiw	r26, 0x02	; 2
    1356:	3c 93       	st	X, r19
    1358:	06 c0       	rjmp	.+12     	; 0x1366 <dtoa_prf+0xdc>
    135a:	3e e6       	ldi	r19, 0x6E	; 110
    135c:	f6 01       	movw	r30, r12
    135e:	30 83       	st	Z, r19
    1360:	41 e6       	ldi	r20, 0x61	; 97
    1362:	41 83       	std	Z+1, r20	; 0x01
    1364:	32 83       	std	Z+2, r19	; 0x02
    1366:	fc 01       	movw	r30, r24
    1368:	32 2f       	mov	r19, r18
    136a:	40 e2       	ldi	r20, 0x20	; 32
    136c:	33 23       	and	r19, r19
    136e:	09 f4       	brne	.+2      	; 0x1372 <dtoa_prf+0xe8>
    1370:	42 c0       	rjmp	.+132    	; 0x13f6 <dtoa_prf+0x16c>
    1372:	41 93       	st	Z+, r20
    1374:	31 50       	subi	r19, 0x01	; 1
    1376:	fa cf       	rjmp	.-12     	; 0x136c <dtoa_prf+0xe2>
    1378:	42 ff       	sbrs	r20, 2
    137a:	44 c0       	rjmp	.+136    	; 0x1404 <dtoa_prf+0x17a>
    137c:	91 11       	cpse	r25, r1
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <dtoa_prf+0xfa>
    1380:	83 e0       	ldi	r24, 0x03	; 3
    1382:	01 c0       	rjmp	.+2      	; 0x1386 <dtoa_prf+0xfc>
    1384:	84 e0       	ldi	r24, 0x04	; 4
    1386:	81 17       	cp	r24, r17
    1388:	18 f4       	brcc	.+6      	; 0x1390 <dtoa_prf+0x106>
    138a:	21 2f       	mov	r18, r17
    138c:	28 1b       	sub	r18, r24
    138e:	01 c0       	rjmp	.+2      	; 0x1392 <dtoa_prf+0x108>
    1390:	20 e0       	ldi	r18, 0x00	; 0
    1392:	51 11       	cpse	r21, r1
    1394:	0b c0       	rjmp	.+22     	; 0x13ac <dtoa_prf+0x122>
    1396:	f6 01       	movw	r30, r12
    1398:	82 2f       	mov	r24, r18
    139a:	30 e2       	ldi	r19, 0x20	; 32
    139c:	88 23       	and	r24, r24
    139e:	19 f0       	breq	.+6      	; 0x13a6 <dtoa_prf+0x11c>
    13a0:	31 93       	st	Z+, r19
    13a2:	81 50       	subi	r24, 0x01	; 1
    13a4:	fb cf       	rjmp	.-10     	; 0x139c <dtoa_prf+0x112>
    13a6:	c2 0e       	add	r12, r18
    13a8:	d1 1c       	adc	r13, r1
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	99 23       	and	r25, r25
    13ae:	29 f0       	breq	.+10     	; 0x13ba <dtoa_prf+0x130>
    13b0:	d6 01       	movw	r26, r12
    13b2:	9c 93       	st	X, r25
    13b4:	f6 01       	movw	r30, r12
    13b6:	31 96       	adiw	r30, 0x01	; 1
    13b8:	6f 01       	movw	r12, r30
    13ba:	c6 01       	movw	r24, r12
    13bc:	03 96       	adiw	r24, 0x03	; 3
    13be:	e2 fe       	sbrs	r14, 2
    13c0:	0b c0       	rjmp	.+22     	; 0x13d8 <dtoa_prf+0x14e>
    13c2:	39 e4       	ldi	r19, 0x49	; 73
    13c4:	d6 01       	movw	r26, r12
    13c6:	3c 93       	st	X, r19
    13c8:	3e e4       	ldi	r19, 0x4E	; 78
    13ca:	11 96       	adiw	r26, 0x01	; 1
    13cc:	3c 93       	st	X, r19
    13ce:	11 97       	sbiw	r26, 0x01	; 1
    13d0:	36 e4       	ldi	r19, 0x46	; 70
    13d2:	12 96       	adiw	r26, 0x02	; 2
    13d4:	3c 93       	st	X, r19
    13d6:	07 c0       	rjmp	.+14     	; 0x13e6 <dtoa_prf+0x15c>
    13d8:	39 e6       	ldi	r19, 0x69	; 105
    13da:	f6 01       	movw	r30, r12
    13dc:	30 83       	st	Z, r19
    13de:	3e e6       	ldi	r19, 0x6E	; 110
    13e0:	31 83       	std	Z+1, r19	; 0x01
    13e2:	36 e6       	ldi	r19, 0x66	; 102
    13e4:	32 83       	std	Z+2, r19	; 0x02
    13e6:	fc 01       	movw	r30, r24
    13e8:	32 2f       	mov	r19, r18
    13ea:	40 e2       	ldi	r20, 0x20	; 32
    13ec:	33 23       	and	r19, r19
    13ee:	19 f0       	breq	.+6      	; 0x13f6 <dtoa_prf+0x16c>
    13f0:	41 93       	st	Z+, r20
    13f2:	31 50       	subi	r19, 0x01	; 1
    13f4:	fb cf       	rjmp	.-10     	; 0x13ec <dtoa_prf+0x162>
    13f6:	fc 01       	movw	r30, r24
    13f8:	e2 0f       	add	r30, r18
    13fa:	f1 1d       	adc	r31, r1
    13fc:	10 82       	st	Z, r1
    13fe:	8e ef       	ldi	r24, 0xFE	; 254
    1400:	9f ef       	ldi	r25, 0xFF	; 255
    1402:	a6 c0       	rjmp	.+332    	; 0x1550 <dtoa_prf+0x2c6>
    1404:	21 e0       	ldi	r18, 0x01	; 1
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	91 11       	cpse	r25, r1
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <dtoa_prf+0x186>
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	16 16       	cp	r1, r22
    1412:	17 06       	cpc	r1, r23
    1414:	1c f4       	brge	.+6      	; 0x141c <dtoa_prf+0x192>
    1416:	fb 01       	movw	r30, r22
    1418:	31 96       	adiw	r30, 0x01	; 1
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <dtoa_prf+0x196>
    141c:	e1 e0       	ldi	r30, 0x01	; 1
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	2e 0f       	add	r18, r30
    1422:	3f 1f       	adc	r19, r31
    1424:	bb 20       	and	r11, r11
    1426:	21 f0       	breq	.+8      	; 0x1430 <dtoa_prf+0x1a6>
    1428:	eb 2d       	mov	r30, r11
    142a:	f0 e0       	ldi	r31, 0x00	; 0
    142c:	31 96       	adiw	r30, 0x01	; 1
    142e:	02 c0       	rjmp	.+4      	; 0x1434 <dtoa_prf+0x1aa>
    1430:	e0 e0       	ldi	r30, 0x00	; 0
    1432:	f0 e0       	ldi	r31, 0x00	; 0
    1434:	2e 0f       	add	r18, r30
    1436:	3f 1f       	adc	r19, r31
    1438:	e1 2f       	mov	r30, r17
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	2e 17       	cp	r18, r30
    143e:	3f 07       	cpc	r19, r31
    1440:	1c f4       	brge	.+6      	; 0x1448 <dtoa_prf+0x1be>
    1442:	12 1b       	sub	r17, r18
    1444:	21 2f       	mov	r18, r17
    1446:	01 c0       	rjmp	.+2      	; 0x144a <dtoa_prf+0x1c0>
    1448:	20 e0       	ldi	r18, 0x00	; 0
    144a:	8e 2d       	mov	r24, r14
    144c:	88 71       	andi	r24, 0x18	; 24
    144e:	59 f4       	brne	.+22     	; 0x1466 <dtoa_prf+0x1dc>
    1450:	f6 01       	movw	r30, r12
    1452:	82 2f       	mov	r24, r18
    1454:	30 e2       	ldi	r19, 0x20	; 32
    1456:	88 23       	and	r24, r24
    1458:	19 f0       	breq	.+6      	; 0x1460 <dtoa_prf+0x1d6>
    145a:	31 93       	st	Z+, r19
    145c:	81 50       	subi	r24, 0x01	; 1
    145e:	fb cf       	rjmp	.-10     	; 0x1456 <dtoa_prf+0x1cc>
    1460:	c2 0e       	add	r12, r18
    1462:	d1 1c       	adc	r13, r1
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	99 23       	and	r25, r25
    1468:	29 f0       	breq	.+10     	; 0x1474 <dtoa_prf+0x1ea>
    146a:	d6 01       	movw	r26, r12
    146c:	9c 93       	st	X, r25
    146e:	f6 01       	movw	r30, r12
    1470:	31 96       	adiw	r30, 0x01	; 1
    1472:	6f 01       	movw	r12, r30
    1474:	51 11       	cpse	r21, r1
    1476:	0b c0       	rjmp	.+22     	; 0x148e <dtoa_prf+0x204>
    1478:	f6 01       	movw	r30, r12
    147a:	82 2f       	mov	r24, r18
    147c:	90 e3       	ldi	r25, 0x30	; 48
    147e:	88 23       	and	r24, r24
    1480:	19 f0       	breq	.+6      	; 0x1488 <dtoa_prf+0x1fe>
    1482:	91 93       	st	Z+, r25
    1484:	81 50       	subi	r24, 0x01	; 1
    1486:	fb cf       	rjmp	.-10     	; 0x147e <dtoa_prf+0x1f4>
    1488:	c2 0e       	add	r12, r18
    148a:	d1 1c       	adc	r13, r1
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	0f 2d       	mov	r16, r15
    1490:	06 0f       	add	r16, r22
    1492:	9a 81       	ldd	r25, Y+2	; 0x02
    1494:	34 2f       	mov	r19, r20
    1496:	30 71       	andi	r19, 0x10	; 16
    1498:	44 ff       	sbrs	r20, 4
    149a:	03 c0       	rjmp	.+6      	; 0x14a2 <dtoa_prf+0x218>
    149c:	91 33       	cpi	r25, 0x31	; 49
    149e:	09 f4       	brne	.+2      	; 0x14a2 <dtoa_prf+0x218>
    14a0:	01 50       	subi	r16, 0x01	; 1
    14a2:	10 16       	cp	r1, r16
    14a4:	24 f4       	brge	.+8      	; 0x14ae <dtoa_prf+0x224>
    14a6:	09 30       	cpi	r16, 0x09	; 9
    14a8:	18 f0       	brcs	.+6      	; 0x14b0 <dtoa_prf+0x226>
    14aa:	08 e0       	ldi	r16, 0x08	; 8
    14ac:	01 c0       	rjmp	.+2      	; 0x14b0 <dtoa_prf+0x226>
    14ae:	01 e0       	ldi	r16, 0x01	; 1
    14b0:	ab 01       	movw	r20, r22
    14b2:	77 ff       	sbrs	r23, 7
    14b4:	02 c0       	rjmp	.+4      	; 0x14ba <dtoa_prf+0x230>
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	50 e0       	ldi	r21, 0x00	; 0
    14ba:	fb 01       	movw	r30, r22
    14bc:	e4 1b       	sub	r30, r20
    14be:	f5 0b       	sbc	r31, r21
    14c0:	a1 e0       	ldi	r26, 0x01	; 1
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	ac 0f       	add	r26, r28
    14c6:	bd 1f       	adc	r27, r29
    14c8:	ea 0f       	add	r30, r26
    14ca:	fb 1f       	adc	r31, r27
    14cc:	8e e2       	ldi	r24, 0x2E	; 46
    14ce:	a8 2e       	mov	r10, r24
    14d0:	4b 01       	movw	r8, r22
    14d2:	80 1a       	sub	r8, r16
    14d4:	91 08       	sbc	r9, r1
    14d6:	0b 2d       	mov	r16, r11
    14d8:	10 e0       	ldi	r17, 0x00	; 0
    14da:	11 95       	neg	r17
    14dc:	01 95       	neg	r16
    14de:	11 09       	sbc	r17, r1
    14e0:	4f 3f       	cpi	r20, 0xFF	; 255
    14e2:	bf ef       	ldi	r27, 0xFF	; 255
    14e4:	5b 07       	cpc	r21, r27
    14e6:	21 f4       	brne	.+8      	; 0x14f0 <dtoa_prf+0x266>
    14e8:	d6 01       	movw	r26, r12
    14ea:	ac 92       	st	X, r10
    14ec:	11 96       	adiw	r26, 0x01	; 1
    14ee:	6d 01       	movw	r12, r26
    14f0:	64 17       	cp	r22, r20
    14f2:	75 07       	cpc	r23, r21
    14f4:	2c f0       	brlt	.+10     	; 0x1500 <dtoa_prf+0x276>
    14f6:	84 16       	cp	r8, r20
    14f8:	95 06       	cpc	r9, r21
    14fa:	14 f4       	brge	.+4      	; 0x1500 <dtoa_prf+0x276>
    14fc:	81 81       	ldd	r24, Z+1	; 0x01
    14fe:	01 c0       	rjmp	.+2      	; 0x1502 <dtoa_prf+0x278>
    1500:	80 e3       	ldi	r24, 0x30	; 48
    1502:	41 50       	subi	r20, 0x01	; 1
    1504:	51 09       	sbc	r21, r1
    1506:	31 96       	adiw	r30, 0x01	; 1
    1508:	d6 01       	movw	r26, r12
    150a:	11 96       	adiw	r26, 0x01	; 1
    150c:	7d 01       	movw	r14, r26
    150e:	40 17       	cp	r20, r16
    1510:	51 07       	cpc	r21, r17
    1512:	24 f0       	brlt	.+8      	; 0x151c <dtoa_prf+0x292>
    1514:	d6 01       	movw	r26, r12
    1516:	8c 93       	st	X, r24
    1518:	67 01       	movw	r12, r14
    151a:	e2 cf       	rjmp	.-60     	; 0x14e0 <dtoa_prf+0x256>
    151c:	64 17       	cp	r22, r20
    151e:	75 07       	cpc	r23, r21
    1520:	39 f4       	brne	.+14     	; 0x1530 <dtoa_prf+0x2a6>
    1522:	96 33       	cpi	r25, 0x36	; 54
    1524:	20 f4       	brcc	.+8      	; 0x152e <dtoa_prf+0x2a4>
    1526:	95 33       	cpi	r25, 0x35	; 53
    1528:	19 f4       	brne	.+6      	; 0x1530 <dtoa_prf+0x2a6>
    152a:	31 11       	cpse	r19, r1
    152c:	01 c0       	rjmp	.+2      	; 0x1530 <dtoa_prf+0x2a6>
    152e:	81 e3       	ldi	r24, 0x31	; 49
    1530:	f6 01       	movw	r30, r12
    1532:	80 83       	st	Z, r24
    1534:	f7 01       	movw	r30, r14
    1536:	82 2f       	mov	r24, r18
    1538:	90 e2       	ldi	r25, 0x20	; 32
    153a:	88 23       	and	r24, r24
    153c:	19 f0       	breq	.+6      	; 0x1544 <dtoa_prf+0x2ba>
    153e:	91 93       	st	Z+, r25
    1540:	81 50       	subi	r24, 0x01	; 1
    1542:	fb cf       	rjmp	.-10     	; 0x153a <dtoa_prf+0x2b0>
    1544:	f7 01       	movw	r30, r14
    1546:	e2 0f       	add	r30, r18
    1548:	f1 1d       	adc	r31, r1
    154a:	10 82       	st	Z, r1
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	29 96       	adiw	r28, 0x09	; 9
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	de bf       	out	0x3e, r29	; 62
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	cd bf       	out	0x3d, r28	; 61
    155c:	df 91       	pop	r29
    155e:	cf 91       	pop	r28
    1560:	1f 91       	pop	r17
    1562:	0f 91       	pop	r16
    1564:	ff 90       	pop	r15
    1566:	ef 90       	pop	r14
    1568:	df 90       	pop	r13
    156a:	cf 90       	pop	r12
    156c:	bf 90       	pop	r11
    156e:	af 90       	pop	r10
    1570:	9f 90       	pop	r9
    1572:	8f 90       	pop	r8
    1574:	08 95       	ret

00001576 <__ftoa_engine>:
    1576:	28 30       	cpi	r18, 0x08	; 8
    1578:	08 f0       	brcs	.+2      	; 0x157c <__ftoa_engine+0x6>
    157a:	27 e0       	ldi	r18, 0x07	; 7
    157c:	33 27       	eor	r19, r19
    157e:	da 01       	movw	r26, r20
    1580:	99 0f       	add	r25, r25
    1582:	31 1d       	adc	r19, r1
    1584:	87 fd       	sbrc	r24, 7
    1586:	91 60       	ori	r25, 0x01	; 1
    1588:	00 96       	adiw	r24, 0x00	; 0
    158a:	61 05       	cpc	r22, r1
    158c:	71 05       	cpc	r23, r1
    158e:	39 f4       	brne	.+14     	; 0x159e <__ftoa_engine+0x28>
    1590:	32 60       	ori	r19, 0x02	; 2
    1592:	2e 5f       	subi	r18, 0xFE	; 254
    1594:	3d 93       	st	X+, r19
    1596:	30 e3       	ldi	r19, 0x30	; 48
    1598:	2a 95       	dec	r18
    159a:	e1 f7       	brne	.-8      	; 0x1594 <__ftoa_engine+0x1e>
    159c:	08 95       	ret
    159e:	9f 3f       	cpi	r25, 0xFF	; 255
    15a0:	30 f0       	brcs	.+12     	; 0x15ae <__ftoa_engine+0x38>
    15a2:	80 38       	cpi	r24, 0x80	; 128
    15a4:	71 05       	cpc	r23, r1
    15a6:	61 05       	cpc	r22, r1
    15a8:	09 f0       	breq	.+2      	; 0x15ac <__ftoa_engine+0x36>
    15aa:	3c 5f       	subi	r19, 0xFC	; 252
    15ac:	3c 5f       	subi	r19, 0xFC	; 252
    15ae:	3d 93       	st	X+, r19
    15b0:	91 30       	cpi	r25, 0x01	; 1
    15b2:	08 f0       	brcs	.+2      	; 0x15b6 <__ftoa_engine+0x40>
    15b4:	80 68       	ori	r24, 0x80	; 128
    15b6:	91 1d       	adc	r25, r1
    15b8:	df 93       	push	r29
    15ba:	cf 93       	push	r28
    15bc:	1f 93       	push	r17
    15be:	0f 93       	push	r16
    15c0:	ff 92       	push	r15
    15c2:	ef 92       	push	r14
    15c4:	19 2f       	mov	r17, r25
    15c6:	98 7f       	andi	r25, 0xF8	; 248
    15c8:	96 95       	lsr	r25
    15ca:	e9 2f       	mov	r30, r25
    15cc:	96 95       	lsr	r25
    15ce:	96 95       	lsr	r25
    15d0:	e9 0f       	add	r30, r25
    15d2:	ff 27       	eor	r31, r31
    15d4:	e8 56       	subi	r30, 0x68	; 104
    15d6:	fe 4f       	sbci	r31, 0xFE	; 254
    15d8:	99 27       	eor	r25, r25
    15da:	33 27       	eor	r19, r19
    15dc:	ee 24       	eor	r14, r14
    15de:	ff 24       	eor	r15, r15
    15e0:	a7 01       	movw	r20, r14
    15e2:	e7 01       	movw	r28, r14
    15e4:	05 90       	lpm	r0, Z+
    15e6:	08 94       	sec
    15e8:	07 94       	ror	r0
    15ea:	28 f4       	brcc	.+10     	; 0x15f6 <__ftoa_engine+0x80>
    15ec:	36 0f       	add	r19, r22
    15ee:	e7 1e       	adc	r14, r23
    15f0:	f8 1e       	adc	r15, r24
    15f2:	49 1f       	adc	r20, r25
    15f4:	51 1d       	adc	r21, r1
    15f6:	66 0f       	add	r22, r22
    15f8:	77 1f       	adc	r23, r23
    15fa:	88 1f       	adc	r24, r24
    15fc:	99 1f       	adc	r25, r25
    15fe:	06 94       	lsr	r0
    1600:	a1 f7       	brne	.-24     	; 0x15ea <__ftoa_engine+0x74>
    1602:	05 90       	lpm	r0, Z+
    1604:	07 94       	ror	r0
    1606:	28 f4       	brcc	.+10     	; 0x1612 <__ftoa_engine+0x9c>
    1608:	e7 0e       	add	r14, r23
    160a:	f8 1e       	adc	r15, r24
    160c:	49 1f       	adc	r20, r25
    160e:	56 1f       	adc	r21, r22
    1610:	c1 1d       	adc	r28, r1
    1612:	77 0f       	add	r23, r23
    1614:	88 1f       	adc	r24, r24
    1616:	99 1f       	adc	r25, r25
    1618:	66 1f       	adc	r22, r22
    161a:	06 94       	lsr	r0
    161c:	a1 f7       	brne	.-24     	; 0x1606 <__ftoa_engine+0x90>
    161e:	05 90       	lpm	r0, Z+
    1620:	07 94       	ror	r0
    1622:	28 f4       	brcc	.+10     	; 0x162e <__ftoa_engine+0xb8>
    1624:	f8 0e       	add	r15, r24
    1626:	49 1f       	adc	r20, r25
    1628:	56 1f       	adc	r21, r22
    162a:	c7 1f       	adc	r28, r23
    162c:	d1 1d       	adc	r29, r1
    162e:	88 0f       	add	r24, r24
    1630:	99 1f       	adc	r25, r25
    1632:	66 1f       	adc	r22, r22
    1634:	77 1f       	adc	r23, r23
    1636:	06 94       	lsr	r0
    1638:	a1 f7       	brne	.-24     	; 0x1622 <__ftoa_engine+0xac>
    163a:	05 90       	lpm	r0, Z+
    163c:	07 94       	ror	r0
    163e:	20 f4       	brcc	.+8      	; 0x1648 <__ftoa_engine+0xd2>
    1640:	49 0f       	add	r20, r25
    1642:	56 1f       	adc	r21, r22
    1644:	c7 1f       	adc	r28, r23
    1646:	d8 1f       	adc	r29, r24
    1648:	99 0f       	add	r25, r25
    164a:	66 1f       	adc	r22, r22
    164c:	77 1f       	adc	r23, r23
    164e:	88 1f       	adc	r24, r24
    1650:	06 94       	lsr	r0
    1652:	a9 f7       	brne	.-22     	; 0x163e <__ftoa_engine+0xc8>
    1654:	84 91       	lpm	r24, Z
    1656:	10 95       	com	r17
    1658:	17 70       	andi	r17, 0x07	; 7
    165a:	41 f0       	breq	.+16     	; 0x166c <__ftoa_engine+0xf6>
    165c:	d6 95       	lsr	r29
    165e:	c7 95       	ror	r28
    1660:	57 95       	ror	r21
    1662:	47 95       	ror	r20
    1664:	f7 94       	ror	r15
    1666:	e7 94       	ror	r14
    1668:	1a 95       	dec	r17
    166a:	c1 f7       	brne	.-16     	; 0x165c <__ftoa_engine+0xe6>
    166c:	ee e3       	ldi	r30, 0x3E	; 62
    166e:	f1 e0       	ldi	r31, 0x01	; 1
    1670:	68 94       	set
    1672:	15 90       	lpm	r1, Z+
    1674:	15 91       	lpm	r17, Z+
    1676:	35 91       	lpm	r19, Z+
    1678:	65 91       	lpm	r22, Z+
    167a:	95 91       	lpm	r25, Z+
    167c:	05 90       	lpm	r0, Z+
    167e:	7f e2       	ldi	r23, 0x2F	; 47
    1680:	73 95       	inc	r23
    1682:	e1 18       	sub	r14, r1
    1684:	f1 0a       	sbc	r15, r17
    1686:	43 0b       	sbc	r20, r19
    1688:	56 0b       	sbc	r21, r22
    168a:	c9 0b       	sbc	r28, r25
    168c:	d0 09       	sbc	r29, r0
    168e:	c0 f7       	brcc	.-16     	; 0x1680 <__ftoa_engine+0x10a>
    1690:	e1 0c       	add	r14, r1
    1692:	f1 1e       	adc	r15, r17
    1694:	43 1f       	adc	r20, r19
    1696:	56 1f       	adc	r21, r22
    1698:	c9 1f       	adc	r28, r25
    169a:	d0 1d       	adc	r29, r0
    169c:	7e f4       	brtc	.+30     	; 0x16bc <__ftoa_engine+0x146>
    169e:	70 33       	cpi	r23, 0x30	; 48
    16a0:	11 f4       	brne	.+4      	; 0x16a6 <__ftoa_engine+0x130>
    16a2:	8a 95       	dec	r24
    16a4:	e6 cf       	rjmp	.-52     	; 0x1672 <__ftoa_engine+0xfc>
    16a6:	e8 94       	clt
    16a8:	01 50       	subi	r16, 0x01	; 1
    16aa:	30 f0       	brcs	.+12     	; 0x16b8 <__ftoa_engine+0x142>
    16ac:	08 0f       	add	r16, r24
    16ae:	0a f4       	brpl	.+2      	; 0x16b2 <__ftoa_engine+0x13c>
    16b0:	00 27       	eor	r16, r16
    16b2:	02 17       	cp	r16, r18
    16b4:	08 f4       	brcc	.+2      	; 0x16b8 <__ftoa_engine+0x142>
    16b6:	20 2f       	mov	r18, r16
    16b8:	23 95       	inc	r18
    16ba:	02 2f       	mov	r16, r18
    16bc:	7a 33       	cpi	r23, 0x3A	; 58
    16be:	28 f0       	brcs	.+10     	; 0x16ca <__ftoa_engine+0x154>
    16c0:	79 e3       	ldi	r23, 0x39	; 57
    16c2:	7d 93       	st	X+, r23
    16c4:	2a 95       	dec	r18
    16c6:	e9 f7       	brne	.-6      	; 0x16c2 <__ftoa_engine+0x14c>
    16c8:	10 c0       	rjmp	.+32     	; 0x16ea <__ftoa_engine+0x174>
    16ca:	7d 93       	st	X+, r23
    16cc:	2a 95       	dec	r18
    16ce:	89 f6       	brne	.-94     	; 0x1672 <__ftoa_engine+0xfc>
    16d0:	06 94       	lsr	r0
    16d2:	97 95       	ror	r25
    16d4:	67 95       	ror	r22
    16d6:	37 95       	ror	r19
    16d8:	17 95       	ror	r17
    16da:	17 94       	ror	r1
    16dc:	e1 18       	sub	r14, r1
    16de:	f1 0a       	sbc	r15, r17
    16e0:	43 0b       	sbc	r20, r19
    16e2:	56 0b       	sbc	r21, r22
    16e4:	c9 0b       	sbc	r28, r25
    16e6:	d0 09       	sbc	r29, r0
    16e8:	98 f0       	brcs	.+38     	; 0x1710 <__ftoa_engine+0x19a>
    16ea:	23 95       	inc	r18
    16ec:	7e 91       	ld	r23, -X
    16ee:	73 95       	inc	r23
    16f0:	7a 33       	cpi	r23, 0x3A	; 58
    16f2:	08 f0       	brcs	.+2      	; 0x16f6 <__ftoa_engine+0x180>
    16f4:	70 e3       	ldi	r23, 0x30	; 48
    16f6:	7c 93       	st	X, r23
    16f8:	20 13       	cpse	r18, r16
    16fa:	b8 f7       	brcc	.-18     	; 0x16ea <__ftoa_engine+0x174>
    16fc:	7e 91       	ld	r23, -X
    16fe:	70 61       	ori	r23, 0x10	; 16
    1700:	7d 93       	st	X+, r23
    1702:	30 f0       	brcs	.+12     	; 0x1710 <__ftoa_engine+0x19a>
    1704:	83 95       	inc	r24
    1706:	71 e3       	ldi	r23, 0x31	; 49
    1708:	7d 93       	st	X+, r23
    170a:	70 e3       	ldi	r23, 0x30	; 48
    170c:	2a 95       	dec	r18
    170e:	e1 f7       	brne	.-8      	; 0x1708 <__ftoa_engine+0x192>
    1710:	11 24       	eor	r1, r1
    1712:	ef 90       	pop	r14
    1714:	ff 90       	pop	r15
    1716:	0f 91       	pop	r16
    1718:	1f 91       	pop	r17
    171a:	cf 91       	pop	r28
    171c:	df 91       	pop	r29
    171e:	99 27       	eor	r25, r25
    1720:	87 fd       	sbrc	r24, 7
    1722:	90 95       	com	r25
    1724:	08 95       	ret

00001726 <strnlen_P>:
    1726:	fc 01       	movw	r30, r24
    1728:	05 90       	lpm	r0, Z+
    172a:	61 50       	subi	r22, 0x01	; 1
    172c:	70 40       	sbci	r23, 0x00	; 0
    172e:	01 10       	cpse	r0, r1
    1730:	d8 f7       	brcc	.-10     	; 0x1728 <strnlen_P+0x2>
    1732:	80 95       	com	r24
    1734:	90 95       	com	r25
    1736:	8e 0f       	add	r24, r30
    1738:	9f 1f       	adc	r25, r31
    173a:	08 95       	ret

0000173c <strnlen>:
    173c:	fc 01       	movw	r30, r24
    173e:	61 50       	subi	r22, 0x01	; 1
    1740:	70 40       	sbci	r23, 0x00	; 0
    1742:	01 90       	ld	r0, Z+
    1744:	01 10       	cpse	r0, r1
    1746:	d8 f7       	brcc	.-10     	; 0x173e <strnlen+0x2>
    1748:	80 95       	com	r24
    174a:	90 95       	com	r25
    174c:	8e 0f       	add	r24, r30
    174e:	9f 1f       	adc	r25, r31
    1750:	08 95       	ret

00001752 <fputc>:
    1752:	0f 93       	push	r16
    1754:	1f 93       	push	r17
    1756:	cf 93       	push	r28
    1758:	df 93       	push	r29
    175a:	fb 01       	movw	r30, r22
    175c:	23 81       	ldd	r18, Z+3	; 0x03
    175e:	21 fd       	sbrc	r18, 1
    1760:	03 c0       	rjmp	.+6      	; 0x1768 <fputc+0x16>
    1762:	8f ef       	ldi	r24, 0xFF	; 255
    1764:	9f ef       	ldi	r25, 0xFF	; 255
    1766:	2c c0       	rjmp	.+88     	; 0x17c0 <fputc+0x6e>
    1768:	22 ff       	sbrs	r18, 2
    176a:	16 c0       	rjmp	.+44     	; 0x1798 <fputc+0x46>
    176c:	46 81       	ldd	r20, Z+6	; 0x06
    176e:	57 81       	ldd	r21, Z+7	; 0x07
    1770:	24 81       	ldd	r18, Z+4	; 0x04
    1772:	35 81       	ldd	r19, Z+5	; 0x05
    1774:	42 17       	cp	r20, r18
    1776:	53 07       	cpc	r21, r19
    1778:	44 f4       	brge	.+16     	; 0x178a <fputc+0x38>
    177a:	a0 81       	ld	r26, Z
    177c:	b1 81       	ldd	r27, Z+1	; 0x01
    177e:	9d 01       	movw	r18, r26
    1780:	2f 5f       	subi	r18, 0xFF	; 255
    1782:	3f 4f       	sbci	r19, 0xFF	; 255
    1784:	31 83       	std	Z+1, r19	; 0x01
    1786:	20 83       	st	Z, r18
    1788:	8c 93       	st	X, r24
    178a:	26 81       	ldd	r18, Z+6	; 0x06
    178c:	37 81       	ldd	r19, Z+7	; 0x07
    178e:	2f 5f       	subi	r18, 0xFF	; 255
    1790:	3f 4f       	sbci	r19, 0xFF	; 255
    1792:	37 83       	std	Z+7, r19	; 0x07
    1794:	26 83       	std	Z+6, r18	; 0x06
    1796:	14 c0       	rjmp	.+40     	; 0x17c0 <fputc+0x6e>
    1798:	8b 01       	movw	r16, r22
    179a:	ec 01       	movw	r28, r24
    179c:	fb 01       	movw	r30, r22
    179e:	00 84       	ldd	r0, Z+8	; 0x08
    17a0:	f1 85       	ldd	r31, Z+9	; 0x09
    17a2:	e0 2d       	mov	r30, r0
    17a4:	19 95       	eicall
    17a6:	89 2b       	or	r24, r25
    17a8:	e1 f6       	brne	.-72     	; 0x1762 <fputc+0x10>
    17aa:	d8 01       	movw	r26, r16
    17ac:	16 96       	adiw	r26, 0x06	; 6
    17ae:	8d 91       	ld	r24, X+
    17b0:	9c 91       	ld	r25, X
    17b2:	17 97       	sbiw	r26, 0x07	; 7
    17b4:	01 96       	adiw	r24, 0x01	; 1
    17b6:	17 96       	adiw	r26, 0x07	; 7
    17b8:	9c 93       	st	X, r25
    17ba:	8e 93       	st	-X, r24
    17bc:	16 97       	sbiw	r26, 0x06	; 6
    17be:	ce 01       	movw	r24, r28
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	08 95       	ret

000017ca <__ultoa_invert>:
    17ca:	fa 01       	movw	r30, r20
    17cc:	aa 27       	eor	r26, r26
    17ce:	28 30       	cpi	r18, 0x08	; 8
    17d0:	51 f1       	breq	.+84     	; 0x1826 <__ultoa_invert+0x5c>
    17d2:	20 31       	cpi	r18, 0x10	; 16
    17d4:	81 f1       	breq	.+96     	; 0x1836 <__ultoa_invert+0x6c>
    17d6:	e8 94       	clt
    17d8:	6f 93       	push	r22
    17da:	6e 7f       	andi	r22, 0xFE	; 254
    17dc:	6e 5f       	subi	r22, 0xFE	; 254
    17de:	7f 4f       	sbci	r23, 0xFF	; 255
    17e0:	8f 4f       	sbci	r24, 0xFF	; 255
    17e2:	9f 4f       	sbci	r25, 0xFF	; 255
    17e4:	af 4f       	sbci	r26, 0xFF	; 255
    17e6:	b1 e0       	ldi	r27, 0x01	; 1
    17e8:	3e d0       	rcall	.+124    	; 0x1866 <__ultoa_invert+0x9c>
    17ea:	b4 e0       	ldi	r27, 0x04	; 4
    17ec:	3c d0       	rcall	.+120    	; 0x1866 <__ultoa_invert+0x9c>
    17ee:	67 0f       	add	r22, r23
    17f0:	78 1f       	adc	r23, r24
    17f2:	89 1f       	adc	r24, r25
    17f4:	9a 1f       	adc	r25, r26
    17f6:	a1 1d       	adc	r26, r1
    17f8:	68 0f       	add	r22, r24
    17fa:	79 1f       	adc	r23, r25
    17fc:	8a 1f       	adc	r24, r26
    17fe:	91 1d       	adc	r25, r1
    1800:	a1 1d       	adc	r26, r1
    1802:	6a 0f       	add	r22, r26
    1804:	71 1d       	adc	r23, r1
    1806:	81 1d       	adc	r24, r1
    1808:	91 1d       	adc	r25, r1
    180a:	a1 1d       	adc	r26, r1
    180c:	20 d0       	rcall	.+64     	; 0x184e <__ultoa_invert+0x84>
    180e:	09 f4       	brne	.+2      	; 0x1812 <__ultoa_invert+0x48>
    1810:	68 94       	set
    1812:	3f 91       	pop	r19
    1814:	2a e0       	ldi	r18, 0x0A	; 10
    1816:	26 9f       	mul	r18, r22
    1818:	11 24       	eor	r1, r1
    181a:	30 19       	sub	r19, r0
    181c:	30 5d       	subi	r19, 0xD0	; 208
    181e:	31 93       	st	Z+, r19
    1820:	de f6       	brtc	.-74     	; 0x17d8 <__ultoa_invert+0xe>
    1822:	cf 01       	movw	r24, r30
    1824:	08 95       	ret
    1826:	46 2f       	mov	r20, r22
    1828:	47 70       	andi	r20, 0x07	; 7
    182a:	40 5d       	subi	r20, 0xD0	; 208
    182c:	41 93       	st	Z+, r20
    182e:	b3 e0       	ldi	r27, 0x03	; 3
    1830:	0f d0       	rcall	.+30     	; 0x1850 <__ultoa_invert+0x86>
    1832:	c9 f7       	brne	.-14     	; 0x1826 <__ultoa_invert+0x5c>
    1834:	f6 cf       	rjmp	.-20     	; 0x1822 <__ultoa_invert+0x58>
    1836:	46 2f       	mov	r20, r22
    1838:	4f 70       	andi	r20, 0x0F	; 15
    183a:	40 5d       	subi	r20, 0xD0	; 208
    183c:	4a 33       	cpi	r20, 0x3A	; 58
    183e:	18 f0       	brcs	.+6      	; 0x1846 <__ultoa_invert+0x7c>
    1840:	49 5d       	subi	r20, 0xD9	; 217
    1842:	31 fd       	sbrc	r19, 1
    1844:	40 52       	subi	r20, 0x20	; 32
    1846:	41 93       	st	Z+, r20
    1848:	02 d0       	rcall	.+4      	; 0x184e <__ultoa_invert+0x84>
    184a:	a9 f7       	brne	.-22     	; 0x1836 <__ultoa_invert+0x6c>
    184c:	ea cf       	rjmp	.-44     	; 0x1822 <__ultoa_invert+0x58>
    184e:	b4 e0       	ldi	r27, 0x04	; 4
    1850:	a6 95       	lsr	r26
    1852:	97 95       	ror	r25
    1854:	87 95       	ror	r24
    1856:	77 95       	ror	r23
    1858:	67 95       	ror	r22
    185a:	ba 95       	dec	r27
    185c:	c9 f7       	brne	.-14     	; 0x1850 <__ultoa_invert+0x86>
    185e:	00 97       	sbiw	r24, 0x00	; 0
    1860:	61 05       	cpc	r22, r1
    1862:	71 05       	cpc	r23, r1
    1864:	08 95       	ret
    1866:	9b 01       	movw	r18, r22
    1868:	ac 01       	movw	r20, r24
    186a:	0a 2e       	mov	r0, r26
    186c:	06 94       	lsr	r0
    186e:	57 95       	ror	r21
    1870:	47 95       	ror	r20
    1872:	37 95       	ror	r19
    1874:	27 95       	ror	r18
    1876:	ba 95       	dec	r27
    1878:	c9 f7       	brne	.-14     	; 0x186c <__ultoa_invert+0xa2>
    187a:	62 0f       	add	r22, r18
    187c:	73 1f       	adc	r23, r19
    187e:	84 1f       	adc	r24, r20
    1880:	95 1f       	adc	r25, r21
    1882:	a0 1d       	adc	r26, r0
    1884:	08 95       	ret

00001886 <_exit>:
    1886:	f8 94       	cli

00001888 <__stop_program>:
    1888:	ff cf       	rjmp	.-2      	; 0x1888 <__stop_program>
